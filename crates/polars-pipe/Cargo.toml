[package]
name = "polars-pipe"
version = { workspace = true }
authors = { workspace = true }
edition = { workspace = true }
homepage = { workspace = true }
license = { workspace = true }
repository = { workspace = true }
description = "Lazy query engine for the Polars DataFrame library"

[dependencies]
polars-arrow = { version = "0.31.1", path = "../polars-arrow", default-features = false }
polars-core = { version = "0.31.1", path = "../polars-core", features = ["lazy", "zip_with", "random"], default-features = false }
polars-io = { version = "0.31.1", path = "../polars-io", default-features = false, features = ["ipc", "async"] }
polars-ops = { version = "0.31.1", path = "../polars-ops", features = ["search_sorted"] }
polars-plan = { version = "0.31.1", path = "../polars-plan", default-features = false, features = ["compile"] }
polars-row = { version = "0.31.1", path = "../polars-row" }
polars-utils = { version = "0.31.1", path = "../polars-utils", features = ["sysinfo"] }

crossbeam-channel = { version = "0.5", optional = true }
crossbeam-queue = { version = "0.3", optional = true }
enum_dispatch = { version = "0.3" }
hashbrown = { workspace = true }
num-traits = { workspace = true }
rayon = { workspace = true }
smartstring = { workspace = true }

[build-dependencies]
version_check = { workspace = true }

[features]
compile = ["crossbeam-channel", "crossbeam-queue"]
csv = ["polars-plan/csv", "polars-io/csv"]
parquet = ["polars-plan/parquet", "polars-io/parquet"]
ipc = ["polars-plan/ipc", "polars-io/ipc"]
async = ["polars-plan/async", "polars-io/async"]
nightly = ["polars-core/nightly", "polars-utils/nightly", "hashbrown/nightly"]
cross_join = ["polars-core/cross_join"]
dtype-u8 = ["polars-core/dtype-u8"]
dtype-u16 = ["polars-core/dtype-u16"]
dtype-i8 = ["polars-core/dtype-i8"]
dtype-i16 = ["polars-core/dtype-i16"]
dtype-decimal = ["polars-core/dtype-decimal"]
dtype-array = ["polars-core/dtype-array"]
dtype-categorical = ["polars-core/dtype-categorical"]
trigger_ooc = []
test = ["compile", "polars-core/chunked_ids"]

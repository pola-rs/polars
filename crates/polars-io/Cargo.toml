[package]
name = "polars-io"
version.workspace = true
authors = ["ritchie46 <ritchie46@gmail.com>"]
edition = "2021"
license = "MIT"
repository = "https://github.com/pola-rs/polars"
description = "IO related logic for the Polars DataFrame library"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
# support for arrows json parsing
json = [
  "arrow/io_json_write",
  "polars-json",
  "simd-json",
  "memmap",
  "lexical",
  "lexical-core",
  "serde_json",
  "dtype-struct",
]
# support for arrows ipc file parsing
ipc = ["arrow/io_ipc", "arrow/io_ipc_compression", "memmap"]
# support for arrows streaming ipc file parsing
ipc_streaming = ["arrow/io_ipc", "arrow/io_ipc_compression"]
# support for arrow avro parsing
avro = ["arrow/io_avro", "arrow/io_avro_compression"]
csv = ["memmap", "lexical", "polars-core/rows", "lexical-core", "fast-float", "simdutf8"]
decompress = ["flate2/miniz_oxide"]
decompress-fast = ["flate2/zlib-ng"]
dtype-categorical = ["polars-core/dtype-categorical"]
dtype-date = ["polars-core/dtype-date", "polars-time/dtype-date"]
object = []
dtype-datetime = [
  "polars-core/dtype-datetime",
  "polars-core/temporal",
  "polars-time/dtype-datetime",
  "chrono",
]
timezones = [
  "chrono-tz",
  "dtype-datetime",
]
dtype-time = ["polars-core/dtype-time", "polars-core/temporal", "polars-time/dtype-time"]
dtype-struct = ["polars-core/dtype-struct"]
dtype-decimal = ["polars-core/dtype-decimal"]
fmt = ["polars-core/fmt"]
lazy = []
parquet = ["polars-core/parquet", "arrow/io_parquet", "arrow/io_parquet_compression", "memmap"]
async = ["async-trait", "futures", "tokio", "arrow/io_ipc_write_async", "polars-error/regex"]
cloud = ["object_store", "async", "url"]
aws = ["object_store/aws", "cloud", "polars-core/aws"]
azure = ["object_store/azure", "cloud", "polars-core/azure"]
gcp = ["object_store/gcp", "cloud", "polars-core/gcp"]
partition = ["polars-core/partition_by"]
temporal = ["dtype-datetime", "dtype-date", "dtype-time"]
simd = []

[dependencies]
ahash.workspace = true
arrow.workspace = true
async-trait = { version = "0.1.59", optional = true }
bytes = "1.3.0"
chrono = { version = "0.4", default-features = false, features = ["std"], optional = true }
chrono-tz = { version = "0.8.1", optional = true }
fast-float = { version = "0.2.0", optional = true }
flate2 = { version = "1", optional = true, default-features = false }
futures = { version = "0.3.25", optional = true }
home = "0.5.4"
lexical = { version = "6", optional = true, default-features = false, features = ["std", "parse-integers"] }
lexical-core = { version = "0.8", optional = true }
memchr.workspace = true
memmap = { package = "memmap2", version = "0.5.2", optional = true }
num-traits.workspace = true
object_store = { version = "0.6.0", default-features = false, optional = true }
once_cell = "1"
polars-arrow = { version = "0.31.1", path = "../polars-arrow" }
polars-core = { version = "0.31.1", path = "../polars-core", features = [], default-features = false }
polars-error = { version = "0.31.1", path = "../polars-error", default-features = false }
polars-json = { version = "0.31.1", optional = true, path = "../polars-json" }
polars-time = { version = "0.31.1", path = "../polars-time", features = [], default-features = false, optional = true }
polars-utils = { version = "0.31.1", path = "../polars-utils" }
rayon.workspace = true
regex = "1.6"
serde = { version = "1", features = ["derive"], optional = true }
serde_json = { version = "1", optional = true, default-features = false, features = ["alloc", "raw_value"] }
simd-json = { version = "0.10", optional = true, features = ["allow-non-simd", "known-key"] }
simdutf8 = { version = "0.1", optional = true }
tokio = { version = "1.26.0", features = ["net"], optional = true }
url = { version = "2.3.1", optional = true }

[dev-dependencies]
tempdir = "0.3.7"

[package.metadata.docs.rs]
all-features = true
# defines the configuration attribute `docsrs`
rustdoc-args = ["--cfg", "docsrs"]

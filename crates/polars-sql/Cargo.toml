[package]
name = "polars-sql"
version = { workspace = true }
authors = { workspace = true }
edition = { workspace = true }
homepage = { workspace = true }
license = { workspace = true }
repository = { workspace = true }
description = "SQL transpiler for Polars. Converts SQL to Polars logical plans"

[dependencies]
arrow = { workspace = true }
polars-core = { workspace = true }
polars-error = { workspace = true }
polars-lazy = { workspace = true, features = ["abs", "binary_encoding", "concat_str", "cross_join", "cum_agg", "dtype-date", "dtype-decimal", "is_in", "list_eval", "log", "meta", "regex", "round_series", "sign", "string_reverse", "strings", "timezones", "trigonometry"] }
polars-plan = { workspace = true }

hex = { workspace = true }
rand = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
sqlparser = { workspace = true }
# sqlparser = { git = "https://github.com/sqlparser-rs/sqlparser-rs.git", rev = "ae3b5844c839072c235965fe0d1bddc473dced87" }

[dev-dependencies]
# to display dataframes in case of test failures
polars-core = { workspace = true, features = ["fmt"] }

[features]
default = []
nightly = []
csv = ["polars-lazy/csv"]
ipc = ["polars-lazy/ipc"]
json = ["polars-lazy/json", "polars-plan/extract_jsonpath"]
binary_encoding = ["polars-lazy/binary_encoding"]
diagonal_concat = ["polars-lazy/diagonal_concat"]
dtype-decimal = ["polars-lazy/dtype-decimal"]
list_eval = ["polars-lazy/list_eval"]
parquet = ["polars-lazy/parquet"]
semi_anti_join = ["polars-lazy/semi_anti_join"]
timezones = ["polars-lazy/timezones"]

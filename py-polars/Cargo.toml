[package]
name = "py-polars"
version = "0.15.1"
authors = ["ritchie46 <ritchie46@gmail.com>"]
documentation = "https://pola-rs.github.io/polars/py-polars/html/reference/index.html"
edition = "2021"
homepage = "https://github.com/pola-rs/polars"
license = "MIT"
readme = "README.md"
repository = "https://github.com/pola-rs/polars"
description = "Blazingly fast DataFrame library"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[workspace]
# prevents package from thinking it's in the workspace
[target.'cfg(any(not(target_os = "linux"), use_mimalloc))'.dependencies]
mimalloc = { version = "*", default-features = false }

[target.'cfg(all(target_os = "linux", not(use_mimalloc)))'.dependencies]
jemallocator = { version = "0.5", features = ["disable_initial_exec_tls"] }

[dependencies]
ahash = "0.8"
bincode = "1.3"
# todo: unfix when compilation problem is solved
libc = "0.2"
ndarray = "0.15"
numpy = "0.16"
once_cell = "1"
polars-core = { path = "../polars/polars-core", default-features = false }
polars-lazy = { path = "../polars/polars-lazy", features = ["python"], default-features = false }
pyo3 = { version = "0.16", features = ["abi3-py37", "extension-module", "multiple-pymethods"] }
pyo3-built = { version = "0.4", optional = true }
serde_json = { version = "1", optional = true }
thiserror = "^1.0"

# features are only there to enable building a slim binary for the benchmark in CI
[features]
avro = ["polars/avro"]
parquet = ["polars/parquet"]
ipc = ["polars/ipc"]
is_in = ["polars/is_in"]
json = ["polars/serde", "serde_json", "polars/json"]
trigonometry = ["polars/trigonometry"]
sign = ["polars/sign"]
asof_join = ["polars/asof_join"]
cross_join = ["polars/cross_join"]
pct_change = ["polars/pct_change"]
repeat_by = ["polars/repeat_by"]
# also includes simd
nightly = ["polars/nightly"]
streaming = ["polars/streaming"]
meta = ["polars/meta"]
search_sorted = ["polars/search_sorted"]
decompress = ["polars/decompress"]
lazy_regex = ["polars/lazy_regex"]
csv-file = ["polars/csv-file"]
object = ["polars/object"]
extract_jsonpath = ["polars/extract_jsonpath"]
pivot = ["polars/pivot"]
top_k = ["polars/top_k"]
propagate_nans = ["polars/propagate_nans"]
sql = ["polars/sql"]
build_info = ["dep:pyo3-built", "dep:built"]

all = [
  "json",
  "parquet",
  "ipc",
  "avro",
  "is_in",
  "repeat_by",
  "trigonometry",
  "sign",
  "asof_join",
  "cross_join",
  "pct_change",
  "search_sorted",
  "meta",
  "decompress",
  "lazy_regex",
  "csv-file",
  "extract_jsonpath",
  "polars/timezones",
  "object",
  "pivot",
  "top_k",
  "build_info",
  # we need to add this, as maturin fails if we don't
  # remove this once polars-algo is released
  "polars/algo",
  "polars/cse",
  "propagate_nans",
  "polars/groupby_list",
  "sql",
  "polars/dtype-binary",
]

# we cannot conditionaly activate simd
# https://github.com/rust-lang/cargo/issues/1197
# so we have an indirection and compile
# with --no-default-features --features=all for targets without simd
default = [
  "all",
  "nightly",
  "streaming",
]

[dependencies.polars]
path = "../polars"
default-features = false
features = [
  "dynamic_groupby",
  "zip_with",
  "lazy",
  "strings",
  "temporal",
  "random",
  "fmt",
  "performant",
  "dtype-full",
  "rows",
  "private",
  "round_series",
  "is_first",
  "dot_product",
  "concat_str",
  "row_hash",
  "reinterpret",
  "mode",
  "cum_agg",
  "rolling_window",
  "interpolate",
  "rank",
  "diff",
  "moment",
  "arange",
  "true_div",
  "dtype-categorical",
  "diagonal_concat",
  "horizontal_concat",
  "abs",
  "ewma",
  "dot_diagram",
  "dataframe_arithmetic",
  "string_encoding",
  "product",
  "ndarray",
  "unique_counts",
  "log",
  "serde-lazy",
  "partition_by",
  "semi_anti_join",
  "list_eval",
  "cumulative_eval",
  "list_to_struct",
  "to_dummies",
  "string_justify",
  "arg_where",
  "date_offset",
]

[patch.crates-io]
cmake = { git = "https://github.com/messense/cmake-rs.git", branch = "cross-compile" }

[lib]
name = "polars"
crate-type = ["cdylib"]

[profile.release]
codegen-units = 1
lto = "fat"

# This is ignored here; would be set in .cargo/config.toml.
# Should not be used when packaging
# target-cpu = "native"

[build-dependencies]
built = { version = "0.5", features = ["chrono", "git2"], optional = true }

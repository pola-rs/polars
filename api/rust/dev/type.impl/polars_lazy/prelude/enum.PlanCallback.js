(function() {
    var type_impls = Object.fromEntries([["polars_lazy",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-PlanCallback%3CArgs,+Out%3E\" class=\"impl\"><a href=\"#impl-Clone-for-PlanCallback%3CArgs,+Out%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, Out&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"polars_lazy/prelude/enum.PlanCallback.html\" title=\"enum polars_lazy::prelude::PlanCallback\">PlanCallback</a>&lt;Args, Out&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"polars_lazy/prelude/enum.PlanCallback.html\" title=\"enum polars_lazy::prelude::PlanCallback\">PlanCallback</a>&lt;Args, Out&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#246-248\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","polars_lazy::dsl::DslNameGenerator"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-PlanCallback%3CArgs,+Out%3E\" class=\"impl\"><a href=\"#impl-Debug-for-PlanCallback%3CArgs,+Out%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, Out&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"polars_lazy/prelude/enum.PlanCallback.html\" title=\"enum polars_lazy::prelude::PlanCallback\">PlanCallback</a>&lt;Args, Out&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","polars_lazy::dsl::DslNameGenerator"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-PlanCallback%3CArgs,+Out%3E\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-PlanCallback%3CArgs,+Out%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, Args, Out&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"enum\" href=\"polars_lazy/prelude/enum.PlanCallback.html\" title=\"enum polars_lazy::prelude::PlanCallback\">PlanCallback</a>&lt;Args, Out&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    _deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"polars_lazy/prelude/enum.PlanCallback.html\" title=\"enum polars_lazy::prelude::PlanCallback\">PlanCallback</a>&lt;Args, Out&gt;, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","polars_lazy::dsl::DslNameGenerator"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-PlanCallback%3CArgs,+Out%3E\" class=\"impl\"><a href=\"#impl-Hash-for-PlanCallback%3CArgs,+Out%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, Out&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"polars_lazy/prelude/enum.PlanCallback.html\" title=\"enum polars_lazy::prelude::PlanCallback\">PlanCallback</a>&lt;Args, Out&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, _state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","polars_lazy::dsl::DslNameGenerator"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-PlanCallback%3CArgs,+Out%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-PlanCallback%3CArgs,+Out%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, Out&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"enum\" href=\"polars_lazy/prelude/enum.PlanCallback.html\" title=\"enum polars_lazy::prelude::PlanCallback\">PlanCallback</a>&lt;Args, Out&gt;<div class=\"where\">where\n    Args: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,\n    Out: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"polars_lazy/prelude/enum.PlanCallback.html\" title=\"enum polars_lazy::prelude::PlanCallback\">PlanCallback</a>&lt;Args, Out&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","polars_lazy::dsl::DslNameGenerator"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PlanCallback%3CArgs,+Out%3E\" class=\"impl\"><a href=\"#impl-PlanCallback%3CArgs,+Out%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, Out&gt; <a class=\"enum\" href=\"polars_lazy/prelude/enum.PlanCallback.html\" title=\"enum polars_lazy::prelude::PlanCallback\">PlanCallback</a>&lt;Args, Out&gt;<div class=\"where\">where\n    Args: PlanCallbackArgs,\n    Out: PlanCallbackOut,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.call\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"polars_lazy/prelude/enum.PlanCallback.html#tymethod.call\" class=\"fn\">call</a>(&amp;self, args: Args) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, PolarsError&gt;</h4></section><section id=\"method.new_python\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"polars_lazy/prelude/enum.PlanCallback.html#tymethod.new_python\" class=\"fn\">new_python</a>(pyfn: <a class=\"struct\" href=\"polars_utils/python_function/struct.PythonObject.html\" title=\"struct polars_utils::python_function::PythonObject\">PythonObject</a>) -&gt; <a class=\"enum\" href=\"polars_lazy/prelude/enum.PlanCallback.html\" title=\"enum polars_lazy::prelude::PlanCallback\">PlanCallback</a>&lt;Args, Out&gt;</h4></section><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"polars_lazy/prelude/enum.PlanCallback.html#tymethod.new\" class=\"fn\">new</a>(\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Args) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Out, PolarsError&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n) -&gt; <a class=\"enum\" href=\"polars_lazy/prelude/enum.PlanCallback.html\" title=\"enum polars_lazy::prelude::PlanCallback\">PlanCallback</a>&lt;Args, Out&gt;</h4></section></div></details>",0,"polars_lazy::dsl::DslNameGenerator"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-PlanCallback%3CArgs,+Out%3E\" class=\"impl\"><a href=\"#impl-Serialize-for-PlanCallback%3CArgs,+Out%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, Out&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"polars_lazy/prelude/enum.PlanCallback.html\" title=\"enum polars_lazy::prelude::PlanCallback\">PlanCallback</a>&lt;Args, Out&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    _serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","polars_lazy::dsl::DslNameGenerator"],["<section id=\"impl-Eq-for-PlanCallback%3CArgs,+Out%3E\" class=\"impl\"><a href=\"#impl-Eq-for-PlanCallback%3CArgs,+Out%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, Out&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"enum\" href=\"polars_lazy/prelude/enum.PlanCallback.html\" title=\"enum polars_lazy::prelude::PlanCallback\">PlanCallback</a>&lt;Args, Out&gt;<div class=\"where\">where\n    Args: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    Out: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","polars_lazy::dsl::DslNameGenerator"],["<section id=\"impl-StructuralPartialEq-for-PlanCallback%3CArgs,+Out%3E\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-PlanCallback%3CArgs,+Out%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Args, Out&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"enum\" href=\"polars_lazy/prelude/enum.PlanCallback.html\" title=\"enum polars_lazy::prelude::PlanCallback\">PlanCallback</a>&lt;Args, Out&gt;</h3></section>","StructuralPartialEq","polars_lazy::dsl::DslNameGenerator"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[17888]}
(function() {
    var type_impls = Object.fromEntries([["polars_core",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/ops/bit_repr.rs.html#175-183\">Source</a><a href=\"#impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars_core/chunked_array/ops/trait.Reinterpret.html\" title=\"trait polars_core::chunked_array::ops::Reinterpret\">Reinterpret</a> for <a class=\"type\" href=\"polars_core/datatypes/type.UInt32Chunked.html\" title=\"type polars_core::datatypes::UInt32Chunked\">UInt32Chunked</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.reinterpret_signed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/ops/bit_repr.rs.html#176-178\">Source</a><a href=\"#method.reinterpret_signed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/chunked_array/ops/trait.Reinterpret.html#method.reinterpret_signed\" class=\"fn\">reinterpret_signed</a>(&amp;self) -&gt; <a class=\"struct\" href=\"polars_core/series/struct.Series.html\" title=\"struct polars_core::series::Series\">Series</a></h4></section><section id=\"method.reinterpret_unsigned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/ops/bit_repr.rs.html#180-182\">Source</a><a href=\"#method.reinterpret_unsigned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/chunked_array/ops/trait.Reinterpret.html#method.reinterpret_unsigned\" class=\"fn\">reinterpret_unsigned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"polars_core/series/struct.Series.html\" title=\"struct polars_core::series::Series\">Series</a></h4></section></div></details>","Reinterpret","polars_core::datatypes::aliases::IdxCa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/hashing/vector_hasher.rs.html#175\">Source</a><a href=\"#impl-VecHash-for-ChunkedArray%3CUInt32Type%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars_core/hashing/trait.VecHash.html\" title=\"trait polars_core::hashing::VecHash\">VecHash</a> for <a class=\"type\" href=\"polars_core/datatypes/type.UInt32Chunked.html\" title=\"type polars_core::datatypes::UInt32Chunked\">UInt32Chunked</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.vec_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/hashing/vector_hasher.rs.html#175\">Source</a><a href=\"#method.vec_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/hashing/trait.VecHash.html#tymethod.vec_hash\" class=\"fn\">vec_hash</a>(\n    &amp;self,\n    random_state: <a class=\"type\" href=\"polars_core/prelude/type.PlSeedableRandomStateQuality.html\" title=\"type polars_core::prelude::PlSeedableRandomStateQuality\">PlSeedableRandomStateQuality</a>,\n    buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;,\n) -&gt; <a class=\"type\" href=\"polars_core/error/type.PolarsResult.html\" title=\"type polars_core::error::PolarsResult\">PolarsResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Compute the hash for all values in the array.</div></details><section id=\"method.vec_hash_combine\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/hashing/vector_hasher.rs.html#175\">Source</a><a href=\"#method.vec_hash_combine\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/hashing/trait.VecHash.html#tymethod.vec_hash_combine\" class=\"fn\">vec_hash_combine</a>(\n    &amp;self,\n    random_state: <a class=\"type\" href=\"polars_core/prelude/type.PlSeedableRandomStateQuality.html\" title=\"type polars_core::prelude::PlSeedableRandomStateQuality\">PlSeedableRandomStateQuality</a>,\n    hashes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>],\n) -&gt; <a class=\"type\" href=\"polars_core/error/type.PolarsResult.html\" title=\"type polars_core::error::PolarsResult\">PolarsResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></div></details>","VecHash","polars_core::datatypes::aliases::IdxCa"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[4838]}
(function() {
    var type_impls = Object.fromEntries([["polars_core",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ChunkCompareEq%3C%26Logical%3CT,+%3CT+as+PolarsCategoricalType%3E::PolarsPhysical%3E%3E-for-Logical%3CT,+%3CT+as+PolarsCategoricalType%3E::PolarsPhysical%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/comparison/categorical.rs.html#275-297\">Source</a><a href=\"#impl-ChunkCompareEq%3C%26Logical%3CT,+%3CT+as+PolarsCategoricalType%3E::PolarsPhysical%3E%3E-for-Logical%3CT,+%3CT+as+PolarsCategoricalType%3E::PolarsPhysical%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_core/datatypes/trait.PolarsCategoricalType.html\" title=\"trait polars_core::datatypes::PolarsCategoricalType\">PolarsCategoricalType</a>&gt; <a class=\"trait\" href=\"polars_core/chunked_array/ops/trait.ChunkCompareEq.html\" title=\"trait polars_core::chunked_array::ops::ChunkCompareEq\">ChunkCompareEq</a>&lt;&amp;<a class=\"struct\" href=\"polars_core/datatypes/struct.Logical.html\" title=\"struct polars_core::datatypes::Logical\">Logical</a>&lt;T, &lt;T as <a class=\"trait\" href=\"polars_core/datatypes/trait.PolarsCategoricalType.html\" title=\"trait polars_core::datatypes::PolarsCategoricalType\">PolarsCategoricalType</a>&gt;::<a class=\"associatedtype\" href=\"polars_core/datatypes/trait.PolarsCategoricalType.html#associatedtype.PolarsPhysical\" title=\"type polars_core::datatypes::PolarsCategoricalType::PolarsPhysical\">PolarsPhysical</a>&gt;&gt; for <a class=\"type\" href=\"polars_core/datatypes/type.CategoricalChunked.html\" title=\"type polars_core::datatypes::CategoricalChunked\">CategoricalChunked</a>&lt;T&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"polars_core/chunked_array/struct.ChunkedArray.html\" title=\"struct polars_core::chunked_array::ChunkedArray\">ChunkedArray</a>&lt;T::<a class=\"associatedtype\" href=\"polars_core/datatypes/trait.PolarsCategoricalType.html#associatedtype.PolarsPhysical\" title=\"type polars_core::datatypes::PolarsCategoricalType::PolarsPhysical\">PolarsPhysical</a>&gt;: for&lt;'a&gt; <a class=\"trait\" href=\"polars_core/chunked_array/ops/trait.ChunkCompareEq.html\" title=\"trait polars_core::chunked_array::ops::ChunkCompareEq\">ChunkCompareEq</a>&lt;&amp;'a <a class=\"struct\" href=\"polars_core/chunked_array/struct.ChunkedArray.html\" title=\"struct polars_core::chunked_array::ChunkedArray\">ChunkedArray</a>&lt;T::<a class=\"associatedtype\" href=\"polars_core/datatypes/trait.PolarsCategoricalType.html#associatedtype.PolarsPhysical\" title=\"type polars_core::datatypes::PolarsCategoricalType::PolarsPhysical\">PolarsPhysical</a>&gt;, Item = <a class=\"type\" href=\"polars_core/datatypes/type.BooleanChunked.html\" title=\"type polars_core::datatypes::BooleanChunked\">BooleanChunked</a>&gt;,</div></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>dtype-categorical</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/comparison/categorical.rs.html#280\">Source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"polars_core/chunked_array/ops/trait.ChunkCompareEq.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"polars_core/chunked_array/struct.ChunkedArray.html\" title=\"struct polars_core::chunked_array::ChunkedArray\">ChunkedArray</a>&lt;<a class=\"struct\" href=\"polars_core/datatypes/struct.BooleanType.html\" title=\"struct polars_core::datatypes::BooleanType\">BooleanType</a>&gt;, <a class=\"enum\" href=\"polars_core/error/enum.PolarsError.html\" title=\"enum polars_core::error::PolarsError\">PolarsError</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/comparison/categorical.rs.html#282-284\">Source</a><a href=\"#method.equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/chunked_array/ops/trait.ChunkCompareEq.html#tymethod.equal\" class=\"fn\">equal</a>(&amp;self, rhs: &amp;Self) -&gt; Self::<a class=\"associatedtype\" href=\"polars_core/chunked_array/ops/trait.ChunkCompareEq.html#associatedtype.Item\" title=\"type polars_core::chunked_array::ops::ChunkCompareEq::Item\">Item</a></h4></section></summary><div class='docblock'>Check for equality.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.equal_missing\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/comparison/categorical.rs.html#286-288\">Source</a><a href=\"#method.equal_missing\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/chunked_array/ops/trait.ChunkCompareEq.html#tymethod.equal_missing\" class=\"fn\">equal_missing</a>(&amp;self, rhs: &amp;Self) -&gt; Self::<a class=\"associatedtype\" href=\"polars_core/chunked_array/ops/trait.ChunkCompareEq.html#associatedtype.Item\" title=\"type polars_core::chunked_array::ops::ChunkCompareEq::Item\">Item</a></h4></section></summary><div class='docblock'>Check for equality where <code>None == None</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not_equal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/comparison/categorical.rs.html#290-292\">Source</a><a href=\"#method.not_equal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/chunked_array/ops/trait.ChunkCompareEq.html#tymethod.not_equal\" class=\"fn\">not_equal</a>(&amp;self, rhs: &amp;Self) -&gt; Self::<a class=\"associatedtype\" href=\"polars_core/chunked_array/ops/trait.ChunkCompareEq.html#associatedtype.Item\" title=\"type polars_core::chunked_array::ops::ChunkCompareEq::Item\">Item</a></h4></section></summary><div class='docblock'>Check for inequality.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not_equal_missing\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/comparison/categorical.rs.html#294-296\">Source</a><a href=\"#method.not_equal_missing\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/chunked_array/ops/trait.ChunkCompareEq.html#tymethod.not_equal_missing\" class=\"fn\">not_equal_missing</a>(&amp;self, rhs: &amp;Self) -&gt; Self::<a class=\"associatedtype\" href=\"polars_core/chunked_array/ops/trait.ChunkCompareEq.html#associatedtype.Item\" title=\"type polars_core::chunked_array::ops::ChunkCompareEq::Item\">Item</a></h4></section></summary><div class='docblock'>Check for inequality where <code>None == None</code>.</div></details></div></details>","ChunkCompareEq<&Logical<T, <T as PolarsCategoricalType>::PolarsPhysical>>","polars_core::chunked_array::logical::decimal::DecimalChunked"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ChunkCompareIneq%3C%26Logical%3CT,+%3CT+as+PolarsCategoricalType%3E::PolarsPhysical%3E%3E-for-Logical%3CT,+%3CT+as+PolarsCategoricalType%3E::PolarsPhysical%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/comparison/categorical.rs.html#299-321\">Source</a><a href=\"#impl-ChunkCompareIneq%3C%26Logical%3CT,+%3CT+as+PolarsCategoricalType%3E::PolarsPhysical%3E%3E-for-Logical%3CT,+%3CT+as+PolarsCategoricalType%3E::PolarsPhysical%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_core/datatypes/trait.PolarsCategoricalType.html\" title=\"trait polars_core::datatypes::PolarsCategoricalType\">PolarsCategoricalType</a>&gt; <a class=\"trait\" href=\"polars_core/chunked_array/ops/trait.ChunkCompareIneq.html\" title=\"trait polars_core::chunked_array::ops::ChunkCompareIneq\">ChunkCompareIneq</a>&lt;&amp;<a class=\"struct\" href=\"polars_core/datatypes/struct.Logical.html\" title=\"struct polars_core::datatypes::Logical\">Logical</a>&lt;T, &lt;T as <a class=\"trait\" href=\"polars_core/datatypes/trait.PolarsCategoricalType.html\" title=\"trait polars_core::datatypes::PolarsCategoricalType\">PolarsCategoricalType</a>&gt;::<a class=\"associatedtype\" href=\"polars_core/datatypes/trait.PolarsCategoricalType.html#associatedtype.PolarsPhysical\" title=\"type polars_core::datatypes::PolarsCategoricalType::PolarsPhysical\">PolarsPhysical</a>&gt;&gt; for <a class=\"type\" href=\"polars_core/datatypes/type.CategoricalChunked.html\" title=\"type polars_core::datatypes::CategoricalChunked\">CategoricalChunked</a>&lt;T&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"polars_core/chunked_array/struct.ChunkedArray.html\" title=\"struct polars_core::chunked_array::ChunkedArray\">ChunkedArray</a>&lt;T::<a class=\"associatedtype\" href=\"polars_core/datatypes/trait.PolarsCategoricalType.html#associatedtype.PolarsPhysical\" title=\"type polars_core::datatypes::PolarsCategoricalType::PolarsPhysical\">PolarsPhysical</a>&gt;: for&lt;'a&gt; <a class=\"trait\" href=\"polars_core/chunked_array/ops/trait.ChunkCompareIneq.html\" title=\"trait polars_core::chunked_array::ops::ChunkCompareIneq\">ChunkCompareIneq</a>&lt;&amp;'a <a class=\"struct\" href=\"polars_core/chunked_array/struct.ChunkedArray.html\" title=\"struct polars_core::chunked_array::ChunkedArray\">ChunkedArray</a>&lt;T::<a class=\"associatedtype\" href=\"polars_core/datatypes/trait.PolarsCategoricalType.html#associatedtype.PolarsPhysical\" title=\"type polars_core::datatypes::PolarsCategoricalType::PolarsPhysical\">PolarsPhysical</a>&gt;, Item = <a class=\"type\" href=\"polars_core/datatypes/type.BooleanChunked.html\" title=\"type polars_core::datatypes::BooleanChunked\">BooleanChunked</a>&gt;,</div></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>dtype-categorical</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/comparison/categorical.rs.html#304\">Source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"polars_core/chunked_array/ops/trait.ChunkCompareIneq.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"polars_core/chunked_array/struct.ChunkedArray.html\" title=\"struct polars_core::chunked_array::ChunkedArray\">ChunkedArray</a>&lt;<a class=\"struct\" href=\"polars_core/datatypes/struct.BooleanType.html\" title=\"struct polars_core::datatypes::BooleanType\">BooleanType</a>&gt;, <a class=\"enum\" href=\"polars_core/error/enum.PolarsError.html\" title=\"enum polars_core::error::PolarsError\">PolarsError</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/comparison/categorical.rs.html#306-308\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/chunked_array/ops/trait.ChunkCompareIneq.html#tymethod.gt\" class=\"fn\">gt</a>(&amp;self, rhs: &amp;<a class=\"type\" href=\"polars_core/datatypes/type.CategoricalChunked.html\" title=\"type polars_core::datatypes::CategoricalChunked\">CategoricalChunked</a>&lt;T&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"polars_core/chunked_array/ops/trait.ChunkCompareIneq.html#associatedtype.Item\" title=\"type polars_core::chunked_array::ops::ChunkCompareIneq::Item\">Item</a></h4></section></summary><div class='docblock'>Greater than comparison.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/comparison/categorical.rs.html#310-312\">Source</a><a href=\"#method.gt_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/chunked_array/ops/trait.ChunkCompareIneq.html#tymethod.gt_eq\" class=\"fn\">gt_eq</a>(&amp;self, rhs: &amp;<a class=\"type\" href=\"polars_core/datatypes/type.CategoricalChunked.html\" title=\"type polars_core::datatypes::CategoricalChunked\">CategoricalChunked</a>&lt;T&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"polars_core/chunked_array/ops/trait.ChunkCompareIneq.html#associatedtype.Item\" title=\"type polars_core::chunked_array::ops::ChunkCompareIneq::Item\">Item</a></h4></section></summary><div class='docblock'>Greater than or equal comparison.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/comparison/categorical.rs.html#314-316\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/chunked_array/ops/trait.ChunkCompareIneq.html#tymethod.lt\" class=\"fn\">lt</a>(&amp;self, rhs: &amp;<a class=\"type\" href=\"polars_core/datatypes/type.CategoricalChunked.html\" title=\"type polars_core::datatypes::CategoricalChunked\">CategoricalChunked</a>&lt;T&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"polars_core/chunked_array/ops/trait.ChunkCompareIneq.html#associatedtype.Item\" title=\"type polars_core::chunked_array::ops::ChunkCompareIneq::Item\">Item</a></h4></section></summary><div class='docblock'>Less than comparison.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/comparison/categorical.rs.html#318-320\">Source</a><a href=\"#method.lt_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/chunked_array/ops/trait.ChunkCompareIneq.html#tymethod.lt_eq\" class=\"fn\">lt_eq</a>(&amp;self, rhs: &amp;<a class=\"type\" href=\"polars_core/datatypes/type.CategoricalChunked.html\" title=\"type polars_core::datatypes::CategoricalChunked\">CategoricalChunked</a>&lt;T&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"polars_core/chunked_array/ops/trait.ChunkCompareIneq.html#associatedtype.Item\" title=\"type polars_core::chunked_array::ops::ChunkCompareIneq::Item\">Item</a></h4></section></summary><div class='docblock'>Less than or equal comparison</div></details></div></details>","ChunkCompareIneq<&Logical<T, <T as PolarsCategoricalType>::PolarsPhysical>>","polars_core::chunked_array::logical::decimal::DecimalChunked"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Logical%3CK,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/mod.rs.html#40-48\">Source</a><a href=\"#impl-Clone-for-Logical%3CK,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K: <a class=\"trait\" href=\"polars_core/datatypes/trait.PolarsDataType.html\" title=\"trait polars_core::datatypes::PolarsDataType\">PolarsDataType</a>, T: <a class=\"trait\" href=\"polars_core/datatypes/trait.PolarsDataType.html\" title=\"trait polars_core::datatypes::PolarsDataType\">PolarsDataType</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"polars_core/datatypes/struct.Logical.html\" title=\"struct polars_core::datatypes::Logical\">Logical</a>&lt;K, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/mod.rs.html#41-47\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#246-248\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","polars_core::chunked_array::logical::decimal::DecimalChunked","polars_core::chunked_array::logical::categorical::CategoricalChunked"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Logical%3CDecimalType,+Int128Type%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/decimal.rs.html#108-191\">Source</a><a href=\"#impl-Logical%3CDecimalType,+Int128Type%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"polars_core/datatypes/struct.Logical.html\" title=\"struct polars_core::datatypes::Logical\">Logical</a>&lt;<a class=\"struct\" href=\"polars_core/datatypes/struct.DecimalType.html\" title=\"struct polars_core::datatypes::DecimalType\">DecimalType</a>, <a class=\"struct\" href=\"polars_core/datatypes/struct.Int128Type.html\" title=\"struct polars_core::datatypes::Int128Type\">Int128Type</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.precision\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/decimal.rs.html#109-114\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.precision\" class=\"fn\">precision</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>dtype-decimal</code></strong> only.</div></span><section id=\"method.scale\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/decimal.rs.html#116-121\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.scale\" class=\"fn\">scale</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>dtype-decimal</code></strong> only.</div></span><section id=\"method.with_prec_scale\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/decimal.rs.html#123-171\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.with_prec_scale\" class=\"fn\">with_prec_scale</a>(\n    &amp;self,\n    prec: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    scale: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    strict: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"type\" href=\"polars_core/error/type.PolarsResult.html\" title=\"type polars_core::error::PolarsResult\">PolarsResult</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'_, Self&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>dtype-decimal</code></strong> only.</div></span><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_phys_with_prec_scale_or_sentinel\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/decimal.rs.html#176-190\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.into_phys_with_prec_scale_or_sentinel\" class=\"fn\">into_phys_with_prec_scale_or_sentinel</a>(\n    &amp;self,\n    prec: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    scale: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    sentinel: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i128.html\">i128</a>,\n) -&gt; <a class=\"type\" href=\"polars_core/datatypes/type.Int128Chunked.html\" title=\"type polars_core::datatypes::Int128Chunked\">Int128Chunked</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>dtype-decimal</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Converts self to a physical representation with the given precision and\nscale, returning the given sentinel value instead for values which don’t\nfit in the given precision and scale. This can be useful for comparisons.</p>\n</div></details></div></details>",0,"polars_core::chunked_array::logical::categorical::CategoricalChunked"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Logical%3CK,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/mod.rs.html#50-60\">Source</a><a href=\"#impl-Logical%3CK,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K: <a class=\"trait\" href=\"polars_core/datatypes/trait.PolarsDataType.html\" title=\"trait polars_core::datatypes::PolarsDataType\">PolarsDataType</a>, T: <a class=\"trait\" href=\"polars_core/datatypes/trait.PolarsDataType.html\" title=\"trait polars_core::datatypes::PolarsDataType\">PolarsDataType</a>&gt; <a class=\"struct\" href=\"polars_core/datatypes/struct.Logical.html\" title=\"struct polars_core::datatypes::Logical\">Logical</a>&lt;K, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_logical\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/mod.rs.html#53-59\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.new_logical\" class=\"fn\">new_logical</a>(\n    phys: <a class=\"struct\" href=\"polars_core/chunked_array/struct.ChunkedArray.html\" title=\"struct polars_core::chunked_array::ChunkedArray\">ChunkedArray</a>&lt;T&gt;,\n    dtype: <a class=\"enum\" href=\"polars_core/datatypes/enum.DataType.html\" title=\"enum polars_core::datatypes::DataType\">DataType</a>,\n) -&gt; <a class=\"struct\" href=\"polars_core/datatypes/struct.Logical.html\" title=\"struct polars_core::datatypes::Logical\">Logical</a>&lt;K, T&gt;</h4></section></summary><div class=\"docblock\"><h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>You must uphold the logical types’ invariants.</p>\n</div></details></div></details>",0,"polars_core::chunked_array::logical::decimal::DecimalChunked","polars_core::chunked_array::logical::categorical::CategoricalChunked"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Logical%3CK,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/mod.rs.html#84-164\">Source</a><a href=\"#impl-Logical%3CK,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K: <a class=\"trait\" href=\"polars_core/datatypes/trait.PolarsDataType.html\" title=\"trait polars_core::datatypes::PolarsDataType\">PolarsDataType</a>, T: <a class=\"trait\" href=\"polars_core/datatypes/trait.PolarsDataType.html\" title=\"trait polars_core::datatypes::PolarsDataType\">PolarsDataType</a>&gt; <a class=\"struct\" href=\"polars_core/datatypes/struct.Logical.html\" title=\"struct polars_core::datatypes::Logical\">Logical</a>&lt;K, T&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"polars_core/datatypes/trait.LogicalType.html\" title=\"trait polars_core::datatypes::LogicalType\">LogicalType</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.name\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/mod.rs.html#89-91\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.name\" class=\"fn\">name</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a></h4></section><section id=\"method.rename\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/mod.rs.html#94-96\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.rename\" class=\"fn\">rename</a>(&amp;mut self, name: <a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>)</h4></section><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/mod.rs.html#99-101\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/mod.rs.html#104-106\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.null_count\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/mod.rs.html#109-111\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.null_count\" class=\"fn\">null_count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.has_nulls\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/mod.rs.html#114-116\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.has_nulls\" class=\"fn\">has_nulls</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.is_null\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/mod.rs.html#119-121\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.is_null\" class=\"fn\">is_null</a>(&amp;self) -&gt; <a class=\"type\" href=\"polars_core/datatypes/type.BooleanChunked.html\" title=\"type polars_core::datatypes::BooleanChunked\">BooleanChunked</a></h4></section><section id=\"method.is_not_null\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/mod.rs.html#124-126\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.is_not_null\" class=\"fn\">is_not_null</a>(&amp;self) -&gt; <a class=\"type\" href=\"polars_core/datatypes/type.BooleanChunked.html\" title=\"type polars_core::datatypes::BooleanChunked\">BooleanChunked</a></h4></section><section id=\"method.split_at\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/mod.rs.html#129-137\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.split_at\" class=\"fn\">split_at</a>(&amp;self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>) -&gt; (Self, Self)</h4></section><section id=\"method.slice\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/mod.rs.html#140-142\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.slice\" class=\"fn\">slice</a>(&amp;self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section><section id=\"method.field\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/mod.rs.html#145-148\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.field\" class=\"fn\">field</a>(&amp;self) -&gt; <a class=\"struct\" href=\"polars_core/datatypes/struct.Field.html\" title=\"struct polars_core::datatypes::Field\">Field</a></h4></section><section id=\"method.physical\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/mod.rs.html#151-153\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.physical\" class=\"fn\">physical</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"polars_core/chunked_array/struct.ChunkedArray.html\" title=\"struct polars_core::chunked_array::ChunkedArray\">ChunkedArray</a>&lt;T&gt;</h4></section><section id=\"method.physical_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/mod.rs.html#156-158\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.physical_mut\" class=\"fn\">physical_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"struct\" href=\"polars_core/chunked_array/struct.ChunkedArray.html\" title=\"struct polars_core::chunked_array::ChunkedArray\">ChunkedArray</a>&lt;T&gt;</h4></section><section id=\"method.into_physical\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/mod.rs.html#161-163\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.into_physical\" class=\"fn\">into_physical</a>(self) -&gt; <a class=\"struct\" href=\"polars_core/chunked_array/struct.ChunkedArray.html\" title=\"struct polars_core::chunked_array::ChunkedArray\">ChunkedArray</a>&lt;T&gt;</h4></section></div></details>",0,"polars_core::chunked_array::logical::decimal::DecimalChunked","polars_core::chunked_array::logical::categorical::CategoricalChunked"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Logical%3CT,+%3CT+as+PolarsCategoricalType%3E::PolarsPhysical%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/categorical.rs.html#32-204\">Source</a><a href=\"#impl-Logical%3CT,+%3CT+as+PolarsCategoricalType%3E::PolarsPhysical%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_core/datatypes/trait.PolarsCategoricalType.html\" title=\"trait polars_core::datatypes::PolarsCategoricalType\">PolarsCategoricalType</a>&gt; <a class=\"struct\" href=\"polars_core/datatypes/struct.Logical.html\" title=\"struct polars_core::datatypes::Logical\">Logical</a>&lt;T, &lt;T as <a class=\"trait\" href=\"polars_core/datatypes/trait.PolarsCategoricalType.html\" title=\"trait polars_core::datatypes::PolarsCategoricalType\">PolarsCategoricalType</a>&gt;::<a class=\"associatedtype\" href=\"polars_core/datatypes/trait.PolarsCategoricalType.html#associatedtype.PolarsPhysical\" title=\"type polars_core::datatypes::PolarsCategoricalType::PolarsPhysical\">PolarsPhysical</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.is_enum\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/categorical.rs.html#33-35\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.is_enum\" class=\"fn\">is_enum</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>dtype-categorical</code></strong> only.</div></span><details class=\"toggle method-toggle\" open><summary><section id=\"method.uses_lexical_ordering\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/categorical.rs.html#58-60\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.uses_lexical_ordering\" class=\"fn\">uses_lexical_ordering</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>dtype-categorical</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Return whether or not the <a href=\"polars_core/datatypes/type.CategoricalChunked.html\" title=\"type polars_core::datatypes::CategoricalChunked\"><code>CategoricalChunked</code></a> uses the lexical order\nof the string values when sorting.</p>\n</div></details><section id=\"method.full_null_with_dtype\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/categorical.rs.html#62-66\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.full_null_with_dtype\" class=\"fn\">full_null_with_dtype</a>(\n    name: <a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>,\n    length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    dtype: <a class=\"enum\" href=\"polars_core/datatypes/enum.DataType.html\" title=\"enum polars_core::datatypes::DataType\">DataType</a>,\n) -&gt; Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>dtype-categorical</code></strong> only.</div></span><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_cats_and_dtype\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/categorical.rs.html#71-111\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.from_cats_and_dtype\" class=\"fn\">from_cats_and_dtype</a>(\n    cat_ids: <a class=\"struct\" href=\"polars_core/chunked_array/struct.ChunkedArray.html\" title=\"struct polars_core::chunked_array::ChunkedArray\">ChunkedArray</a>&lt;T::<a class=\"associatedtype\" href=\"polars_core/datatypes/trait.PolarsCategoricalType.html#associatedtype.PolarsPhysical\" title=\"type polars_core::datatypes::PolarsCategoricalType::PolarsPhysical\">PolarsPhysical</a>&gt;,\n    dtype: <a class=\"enum\" href=\"polars_core/datatypes/enum.DataType.html\" title=\"enum polars_core::datatypes::DataType\">DataType</a>,\n) -&gt; Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>dtype-categorical</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Create a <a href=\"polars_core/datatypes/type.CategoricalChunked.html\" title=\"type polars_core::datatypes::CategoricalChunked\"><code>CategoricalChunked</code></a> from a physical array and dtype.</p>\n<p>Checks that all the category ids are valid, mapping invalid ones to nulls.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_cats_and_dtype_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/categorical.rs.html#117-128\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.from_cats_and_dtype_unchecked\" class=\"fn\">from_cats_and_dtype_unchecked</a>(\n    cat_ids: <a class=\"struct\" href=\"polars_core/chunked_array/struct.ChunkedArray.html\" title=\"struct polars_core::chunked_array::ChunkedArray\">ChunkedArray</a>&lt;T::<a class=\"associatedtype\" href=\"polars_core/datatypes/trait.PolarsCategoricalType.html#associatedtype.PolarsPhysical\" title=\"type polars_core::datatypes::PolarsCategoricalType::PolarsPhysical\">PolarsPhysical</a>&gt;,\n    dtype: <a class=\"enum\" href=\"polars_core/datatypes/enum.DataType.html\" title=\"enum polars_core::datatypes::DataType\">DataType</a>,\n) -&gt; Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>dtype-categorical</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Create a <a href=\"polars_core/datatypes/type.CategoricalChunked.html\" title=\"type polars_core::datatypes::CategoricalChunked\"><code>CategoricalChunked</code></a> from a physical array and dtype.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>It’s not checked that the indices are in-bounds or that the dtype is correct.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mapping\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/categorical.rs.html#131-136\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.get_mapping\" class=\"fn\">get_mapping</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"polars_core/prelude/struct.Arc.html\" title=\"struct polars_core::prelude::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"polars_core/datatypes/struct.CategoricalMapping.html\" title=\"struct polars_core::datatypes::CategoricalMapping\">CategoricalMapping</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>dtype-categorical</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Get a reference to the mapping of categorical types to the string values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_str\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/categorical.rs.html#139-144\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.iter_str\" class=\"fn\">iter_str</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"polars_core/chunked_array/iterator/trait.PolarsIterator.html\" title=\"trait polars_core::chunked_array::iterator::PolarsIterator\">PolarsIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>dtype-categorical</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Create an <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> that iterates over the <code>&amp;str</code> values of the <a href=\"polars_core/datatypes/type.CategoricalChunked.html\" title=\"type polars_core::datatypes::CategoricalChunked\"><code>CategoricalChunked</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_iter\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/categorical.rs.html#149-191\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.from_str_iter\" class=\"fn\">from_str_iter</a>&lt;'a, I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;&gt;&gt;(\n    name: <a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>,\n    dtype: <a class=\"enum\" href=\"polars_core/datatypes/enum.DataType.html\" title=\"enum polars_core::datatypes::DataType\">DataType</a>,\n    strings: I,\n) -&gt; <a class=\"type\" href=\"polars_core/error/type.PolarsResult.html\" title=\"type polars_core::error::PolarsResult\">PolarsResult</a>&lt;Self&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>dtype-categorical</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Converts from strings to this CategoricalChunked.</p>\n<p>If this dtype is an Enum any non-existing strings get mapped to null.</p>\n</div></details><section id=\"method.to_arrow\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/logical/categorical.rs.html#193-203\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.to_arrow\" class=\"fn\">to_arrow</a>(&amp;self, compat_level: <a class=\"struct\" href=\"polars_core/datatypes/struct.CompatLevel.html\" title=\"struct polars_core::datatypes::CompatLevel\">CompatLevel</a>) -&gt; DictionaryArray&lt;T::<a class=\"associatedtype\" href=\"polars_core/datatypes/trait.PolarsCategoricalType.html#associatedtype.Native\" title=\"type polars_core::datatypes::PolarsCategoricalType::Native\">Native</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>dtype-categorical</code></strong> only.</div></span></div></details>",0,"polars_core::chunked_array::logical::decimal::DecimalChunked"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Logical%3CT,+%3CT+as+PolarsCategoricalType%3E::PolarsPhysical%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/ops/sort/categorical.rs.html#5-118\">Source</a><a href=\"#impl-Logical%3CT,+%3CT+as+PolarsCategoricalType%3E::PolarsPhysical%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_core/datatypes/trait.PolarsCategoricalType.html\" title=\"trait polars_core::datatypes::PolarsCategoricalType\">PolarsCategoricalType</a>&gt; <a class=\"struct\" href=\"polars_core/datatypes/struct.Logical.html\" title=\"struct polars_core::datatypes::Logical\">Logical</a>&lt;T, &lt;T as <a class=\"trait\" href=\"polars_core/datatypes/trait.PolarsCategoricalType.html\" title=\"trait polars_core::datatypes::PolarsCategoricalType\">PolarsCategoricalType</a>&gt;::<a class=\"associatedtype\" href=\"polars_core/datatypes/trait.PolarsCategoricalType.html#associatedtype.PolarsPhysical\" title=\"type polars_core::datatypes::PolarsCategoricalType::PolarsPhysical\">PolarsPhysical</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.sort_with\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/ops/sort/categorical.rs.html#7-59\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.sort_with\" class=\"fn\">sort_with</a>(&amp;self, options: <a class=\"struct\" href=\"polars_core/chunked_array/ops/sort/options/struct.SortOptions.html\" title=\"struct polars_core::chunked_array::ops::sort::options::SortOptions\">SortOptions</a>) -&gt; <a class=\"type\" href=\"polars_core/datatypes/type.CategoricalChunked.html\" title=\"type polars_core::datatypes::CategoricalChunked\">CategoricalChunked</a>&lt;T&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>dtype-categorical</code></strong> only.</div></span><details class=\"toggle method-toggle\" open><summary><section id=\"method.sort\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/ops/sort/categorical.rs.html#63-71\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.sort\" class=\"fn\">sort</a>(&amp;self, descending: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"type\" href=\"polars_core/datatypes/type.CategoricalChunked.html\" title=\"type polars_core::datatypes::CategoricalChunked\">CategoricalChunked</a>&lt;T&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>dtype-categorical</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Returned a sorted <code>ChunkedArray</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.arg_sort\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_core/chunked_array/ops/sort/categorical.rs.html#74-89\">Source</a><h4 class=\"code-header\">pub fn <a href=\"polars_core/datatypes/struct.Logical.html#tymethod.arg_sort\" class=\"fn\">arg_sort</a>(&amp;self, options: <a class=\"struct\" href=\"polars_core/chunked_array/ops/sort/options/struct.SortOptions.html\" title=\"struct polars_core::chunked_array::ops::sort::options::SortOptions\">SortOptions</a>) -&gt; <a class=\"type\" href=\"polars_core/datatypes/type.IdxCa.html\" title=\"type polars_core::datatypes::IdxCa\">IdxCa</a></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>dtype-categorical</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Retrieve the indexes needed to sort this array.</p>\n</div></details></div></details>",0,"polars_core::chunked_array::logical::decimal::DecimalChunked"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[47176]}
(function() {
    var type_impls = Object.fromEntries([["polars",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Schema&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Schema&lt;D&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#246-248\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","polars::prelude::ArrowSchema","polars::prelude::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Schema&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","polars::prelude::ArrowSchema","polars::prelude::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-Default-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for Schema&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Schema&lt;D&gt;</h4></section></summary><div class='docblock'>Returns the โdefault valueโ for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","polars::prelude::ArrowSchema","polars::prelude::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'de, D&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for Schema&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(\n    __deserializer: __D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Schema&lt;D&gt;, &lt;__D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","polars::prelude::ArrowSchema","polars::prelude::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CF%3E-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-Extend%3CF%3E-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;F, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt; for Schema&lt;D&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;(<a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>, D)&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a href=\"#method.extend\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;T&gt;(&amp;mut self, iter: T)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = F&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#417\">Source</a><a href=\"#method.extend_one\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#425\">Source</a><a href=\"#method.extend_reserve\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<F>","polars::prelude::ArrowSchema","polars::prelude::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26Row%3C'_%3E%3E-for-Schema%3CDataType%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/frame/row/mod.rs.html#240\">Source</a><a href=\"#impl-From%3C%26Row%3C'_%3E%3E-for-Schema%3CDataType%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"struct\" href=\"polars/frame/row/struct.Row.html\" title=\"struct polars::frame::row::Row\">Row</a>&lt;'_&gt;&gt; for Schema&lt;<a class=\"enum\" href=\"polars/prelude/enum.DataType.html\" title=\"enum polars::prelude::DataType\">DataType</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/frame/row/mod.rs.html#241\">Source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(row: &amp;<a class=\"struct\" href=\"polars/frame/row/struct.Row.html\" title=\"struct polars::frame::row::Row\">Row</a>&lt;'_&gt;) -&gt; Schema&lt;<a class=\"enum\" href=\"polars/prelude/enum.DataType.html\" title=\"enum polars::prelude::DataType\">DataType</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&Row<'_>>","polars::prelude::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CIndexMap%3CPlSmallStr,+D,+RandomState%3E%3E-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-From%3CIndexMap%3CPlSmallStr,+D,+RandomState%3E%3E-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;IndexMap&lt;<a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>, D, RandomState&gt;&gt; for Schema&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(fields: IndexMap&lt;<a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>, D, RandomState&gt;) -&gt; Schema&lt;D&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<IndexMap<PlSmallStr, D, RandomState>>","polars::prelude::ArrowSchema","polars::prelude::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CF%3E-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-FromIterator%3CF%3E-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;F, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;F&gt; for Schema&lt;D&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;(<a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>, D)&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a href=\"#method.from_iter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(iter: I) -&gt; Schema&lt;D&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = F&gt;,</div></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<F>","polars::prelude::ArrowSchema","polars::prelude::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-Hash-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for Schema&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","polars::prelude::ArrowSchema","polars::prelude::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-IntoIterator-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for Schema&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = &lt;IndexMap&lt;<a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>, D, RandomState&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = (<a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>, D)</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a href=\"#method.into_iter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; &lt;Schema&lt;D&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","polars::prelude::ArrowSchema","polars::prelude::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Schema&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Schema&lt;D&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","polars::prelude::ArrowSchema","polars::prelude::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;D&gt; Schema&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.with_capacity\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Schema&lt;D&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Reserve <code>additional</code> memory spaces in the schema.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>The number of fields in the schema.</p>\n</div></details><section id=\"method.is_empty\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.rename\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">rename</a>(&amp;mut self, old: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, new: <a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Rename field <code>old</code> to <code>new</code>, and return the (owned) old name.</p>\n<p>If <code>old</code> is not present in the schema, the schema is not modified and <code>None</code> is returned. Otherwise the schema\nis updated and <code>Some(old_name)</code> is returned.</p>\n</div></details><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>(&amp;mut self, key: <a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>, value: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;D&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_at_index\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert_at_index</a>(\n    &amp;mut self,\n    index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    name: <a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>,\n    dtype: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;D&gt;, <a class=\"enum\" href=\"polars/prelude/enum.PolarsError.html\" title=\"enum polars::prelude::PolarsError\">PolarsError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Insert a field with <code>name</code> and <code>dtype</code> at the given <code>index</code> into this schema.</p>\n<p>If a field named <code>name</code> already exists, it is updated with the new dtype. Regardless, the field named <code>name</code> is\nalways moved to the given index. Valid indices range from <code>0</code> (front of the schema) to <code>self.len()</code> (after the\nend of the schema).</p>\n<p>For a non-mutating version that clones the schema, see [<code>new_inserting_at_index</code>][Self::new_inserting_at_index].</p>\n<p>Runtime: <strong>O(n)</strong> where <code>n</code> is the number of fields in the schema.</p>\n<p>Returns:</p>\n<ul>\n<li>If index is out of bounds, <code>Err(PolarsError)</code></li>\n<li>Else if <code>name</code> was already in the schema, <code>Ok(Some(old_dtype))</code></li>\n<li>Else <code>Ok(None)</code></li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>(&amp;self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;D</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get a reference to the dtype of the field named <code>name</code>, or <code>None</code> if the field doesnโt exist.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_mut</a>(&amp;mut self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get a mutable reference to the dtype of the field named <code>name</code>, or <code>None</code> if the field doesnโt exist.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>(&amp;self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;D</a>, <a class=\"enum\" href=\"polars/prelude/enum.PolarsError.html\" title=\"enum polars::prelude::PolarsError\">PolarsError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get a reference to the dtype of the field named <code>name</code>, or <code>Err(PolarsErr)</code> if the field doesnโt exist.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get_mut</a>(&amp;mut self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>, <a class=\"enum\" href=\"polars/prelude/enum.PolarsError.html\" title=\"enum polars::prelude::PolarsError\">PolarsError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get a mutable reference to the dtype of the field named <code>name</code>, or <code>Err(PolarsErr)</code> if the field doesnโt exist.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_full\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_full</a>(&amp;self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, &amp;<a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;D</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Return all data about the field named <code>name</code>: its index in the schema, its name, and its dtype.</p>\n<p>Returns <code>Some((index, &amp;name, &amp;dtype))</code> if the field exists, <code>None</code> if it doesnโt.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_full\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get_full</a>(\n    &amp;self,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, &amp;<a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;D</a>), <a class=\"enum\" href=\"polars/prelude/enum.PolarsError.html\" title=\"enum polars::prelude::PolarsError\">PolarsError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Return all data about the field named <code>name</code>: its index in the schema, its name, and its dtype.</p>\n<p>Returns <code>Ok((index, &amp;name, &amp;dtype))</code> if the field exists, <code>Err(PolarsErr)</code> if it doesnโt.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_at_index\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_at_index</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;<a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;D</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Get references to the name and dtype of the field at <code>index</code>.</p>\n<p>If <code>index</code> is inbounds, returns <code>Some((&amp;name, &amp;dtype))</code>, else <code>None</code>. See\n[<code>get_at_index_mut</code>][Self::get_at_index_mut] for a mutable version.</p>\n</div></details><section id=\"method.try_get_at_index\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get_at_index</a>(\n    &amp;self,\n    index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;<a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;D</a>), <a class=\"enum\" href=\"polars/prelude/enum.PolarsError.html\" title=\"enum polars::prelude::PolarsError\">PolarsError</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_at_index_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_at_index_mut</a>(\n    &amp;mut self,\n    index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut <a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Get mutable references to the name and dtype of the field at <code>index</code>.</p>\n<p>If <code>index</code> is inbounds, returns <code>Some((&amp;mut name, &amp;mut dtype))</code>, else <code>None</code>. See\n[<code>get_at_index</code>][Self::get_at_index] for an immutable version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>(&amp;mut self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;D&gt;</h4></section></summary><div class=\"docblock\"><p>Swap-remove a field by name and, if the field existed, return its dtype.</p>\n<p>If the field does not exist, the schema is not modified and <code>None</code> is returned.</p>\n<p>This method does a <code>swap_remove</code>, which is O(1) but <strong>changes the order of the schema</strong>: the field named <code>name</code>\nis replaced by the last field, which takes its position. For a slower, but order-preserving, method, use\n[<code>shift_remove</code>][Self::shift_remove].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">shift_remove</a>(&amp;mut self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;D&gt;</h4></section></summary><div class=\"docblock\"><p>Remove a field by name, preserving order, and, if the field existed, return its dtype.</p>\n<p>If the field does not exist, the schema is not modified and <code>None</code> is returned.</p>\n<p>This method does a <code>shift_remove</code>, which preserves the order of the fields in the schema but <strong>is O(n)</strong>. For a\nfaster, but not order-preserving, method, use [<code>remove</code>][Self::remove].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove_index\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">shift_remove_index</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>, D)&gt;</h4></section></summary><div class=\"docblock\"><p>Remove a field by name, preserving order, and, if the field existed, return its dtype.</p>\n<p>If the field does not exist, the schema is not modified and <code>None</code> is returned.</p>\n<p>This method does a <code>shift_remove</code>, which preserves the order of the fields in the schema but <strong>is O(n)</strong>. For a\nfaster, but not order-preserving, method, use [<code>remove</code>][Self::remove].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains</a>(&amp;self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Whether the schema contains a field named <code>name</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_dtype\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_dtype</a>(&amp;mut self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, dtype: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;D&gt;</h4></section></summary><div class=\"docblock\"><p>Change the field named <code>name</code> to the given <code>dtype</code> and return the previous dtype.</p>\n<p>If <code>name</code> doesnโt already exist in the schema, the schema is not modified and <code>None</code> is returned. Otherwise\nreturns <code>Some(old_dtype)</code>.</p>\n<p>This method only ever modifies an existing field and never adds a new field to the schema. To add a new field,\nuse [<code>with_column</code>][Self::with_column] or [<code>insert_at_index</code>][Self::insert_at_index].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_dtype_at_index\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_dtype_at_index</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, dtype: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;D&gt;</h4></section></summary><div class=\"docblock\"><p>Change the field at the given index to the given <code>dtype</code> and return the previous dtype.</p>\n<p>If the index is out of bounds, the schema is not modified and <code>None</code> is returned. Otherwise returns\n<code>Some(old_dtype)</code>.</p>\n<p>This method only ever modifies an existing index and never adds a new field to the schema. To add a new field,\nuse [<code>with_column</code>][Self::with_column] or [<code>insert_at_index</code>][Self::insert_at_index].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_column\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">with_column</a>(&amp;mut self, name: <a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>, dtype: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;D&gt;</h4></section></summary><div class=\"docblock\"><p>Insert a column into the [<code>Schema</code>].</p>\n<p>If the schema already has this column, this instead updates it with the new value and\nreturns the old one. Otherwise, the column is inserted at the end.</p>\n<p>To enforce the index of the resulting field, use [<code>insert_at_index</code>][Self::insert_at_index].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_insert</a>(\n    &amp;mut self,\n    name: <a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>,\n    value: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"polars/prelude/enum.PolarsError.html\" title=\"enum polars::prelude::PolarsError\">PolarsError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Raises DuplicateError if this column already exists in the schema.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hstack_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hstack_mut</a>(\n    &amp;mut self,\n    columns: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;(<a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>, D)&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"polars/prelude/enum.PolarsError.html\" title=\"enum polars::prelude::PolarsError\">PolarsError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Performs [<code>Schema::try_insert</code>] for every column.</p>\n<p>Raises DuplicateError if a column already exists in the schema.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hstack\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hstack</a>(\n    self,\n    columns: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;(<a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>, D)&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Schema&lt;D&gt;, <a class=\"enum\" href=\"polars/prelude/enum.PolarsError.html\" title=\"enum polars::prelude::PolarsError\">PolarsError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Performs [<code>Schema::try_insert</code>] for every column.</p>\n<p>Raises DuplicateError if a column already exists in the schema.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.merge\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">merge</a>(&amp;mut self, other: Schema&lt;D&gt;)</h4></section></summary><div class=\"docblock\"><p>Merge <code>other</code> into <code>self</code>.</p>\n<p>Merging logic:</p>\n<ul>\n<li>Fields that occur in <code>self</code> but not <code>other</code> are unmodified</li>\n<li>Fields that occur in <code>other</code> but not <code>self</code> are appended, in order, to the end of <code>self</code></li>\n<li>Fields that occur in both <code>self</code> and <code>other</code> are updated with the dtype from <code>other</code>, but keep their original\nindex</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section></summary><div class=\"docblock\"><p>Iterates over the <code>(&amp;name, &amp;dtype)</code> pairs in this schema.</p>\n<p>For an owned version, use [<code>iter_fields</code>][Self::iter_fields], which clones the data to iterate owned <code>Field</code>s</p>\n</div></details><section id=\"method.iter_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_mut</a>(&amp;mut self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_names\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_names</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section></summary><div class=\"docblock\"><p>Iterates over references to the names in this schema.</p>\n</div></details><section id=\"method.iter_names_cloned\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_names_cloned</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section></summary><div class=\"docblock\"><p>Iterates over references to the dtypes in this schema.</p>\n</div></details><section id=\"method.into_iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">into_iter_values</a>(self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values_mut</a>(&amp;mut self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section></summary><div class=\"docblock\"><p>Iterates over mut references to the dtypes in this schema.</p>\n</div></details><section id=\"method.index_of\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">index_of</a>(&amp;self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section><section id=\"method.try_index_of\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_index_of</a>(&amp;self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"polars/prelude/enum.PolarsError.html\" title=\"enum polars::prelude::PolarsError\">PolarsError</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.field_compare\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">field_compare</a>&lt;'a, 'b&gt;(\n    &amp;'a self,\n    other: &amp;'b Schema&lt;D&gt;,\n    self_extra: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, (&amp;'a <a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a D</a>))&gt;,\n    other_extra: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, (&amp;'b <a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'b D</a>))&gt;,\n)</h4></section></summary><div class=\"docblock\"><p>Compare the fields between two schema returning the additional columns that each schema has.</p>\n</div></details></div></details>",0,"polars::prelude::ArrowSchema","polars::prelude::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;D&gt; Schema&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_inserting_at_index\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_inserting_at_index</a>(\n    &amp;self,\n    index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    name: <a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>,\n    field: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Schema&lt;D&gt;, <a class=\"enum\" href=\"polars/prelude/enum.PolarsError.html\" title=\"enum polars::prelude::PolarsError\">PolarsError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new schema from this one, inserting a field with <code>name</code> and <code>dtype</code> at the given <code>index</code>.</p>\n<p>If a field named <code>name</code> already exists, it is updated with the new dtype. Regardless, the field named <code>name</code> is\nalways moved to the given index. Valid indices range from <code>0</code> (front of the schema) to <code>self.len()</code> (after the\nend of the schema).</p>\n<p>For a mutating version that doesnโt clone, see [<code>insert_at_index</code>][Self::insert_at_index].</p>\n<p>Runtime: <strong>O(m * n)</strong> where <code>m</code> is the (average) length of the field names and <code>n</code> is the number of fields in\nthe schema. This method clones every field in the schema.</p>\n<p>Returns: <code>Ok(new_schema)</code> if <code>index &lt;= self.len()</code>, else <code>Err(PolarsError)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.merge_from_ref\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">merge_from_ref</a>(&amp;mut self, other: &amp;Schema&lt;D&gt;)</h4></section></summary><div class=\"docblock\"><p>Merge borrowed <code>other</code> into <code>self</code>.</p>\n<p>Merging logic:</p>\n<ul>\n<li>Fields that occur in <code>self</code> but not <code>other</code> are unmodified</li>\n<li>Fields that occur in <code>other</code> but not <code>self</code> are appended, in order, to the end of <code>self</code></li>\n<li>Fields that occur in both <code>self</code> and <code>other</code> are updated with the dtype from <code>other</code>, but keep their original\nindex</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_project\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_project</a>&lt;I&gt;(&amp;self, columns: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Schema&lt;D&gt;, <a class=\"enum\" href=\"polars/prelude/enum.PolarsError.html\" title=\"enum polars::prelude::PolarsError\">PolarsError</a>&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Generates another schema with just the specified columns selected from this one.</p>\n</div></details><section id=\"method.try_project_indices\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_project_indices</a>(\n    &amp;self,\n    indices: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Schema&lt;D&gt;, <a class=\"enum\" href=\"polars/prelude/enum.PolarsError.html\" title=\"enum polars::prelude::PolarsError\">PolarsError</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">filter</a>&lt;F&gt;(self, predicate: F) -&gt; Schema&lt;D&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;D</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns a new [<code>Schema</code>] with a subset of all fields whose <code>predicate</code>\nevaluates to true.</p>\n</div></details><section id=\"method.from_iter_check_duplicates\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_iter_check_duplicates</a>&lt;I, F&gt;(\n    iter: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Schema&lt;D&gt;, <a class=\"enum\" href=\"polars/prelude/enum.PolarsError.html\" title=\"enum polars::prelude::PolarsError\">PolarsError</a>&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = F&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;(<a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>, D)&gt;,</div></h4></section><section id=\"method.try_from_iter_check_duplicates\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_from_iter_check_duplicates</a>&lt;I, F, E&gt;(\n    iter: I,\n    err_func: E,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Schema&lt;D&gt;, <a class=\"enum\" href=\"polars/prelude/enum.PolarsError.html\" title=\"enum polars::prelude::PolarsError\">PolarsError</a>&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;F, <a class=\"enum\" href=\"polars/prelude/enum.PolarsError.html\" title=\"enum polars::prelude::PolarsError\">PolarsError</a>&gt;&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;(<a class=\"struct\" href=\"polars/prelude/struct.PlSmallStr.html\" title=\"struct polars::prelude::PlSmallStr\">PlSmallStr</a>, D)&gt;,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"polars/prelude/enum.PolarsError.html\" title=\"enum polars::prelude::PolarsError\">PolarsError</a>,</div></h4></section></div></details>",0,"polars::prelude::ArrowSchema","polars::prelude::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SchemaExt-for-Schema%3CDataType%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/schema/mod.rs.html#31\">Source</a><a href=\"#impl-SchemaExt-for-Schema%3CDataType%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars/prelude/trait.SchemaExt.html\" title=\"trait polars::prelude::SchemaExt\">SchemaExt</a> for Schema&lt;<a class=\"enum\" href=\"polars/prelude/enum.DataType.html\" title=\"enum polars::prelude::DataType\">DataType</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_field\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/schema/mod.rs.html#45\">Source</a><a href=\"#method.get_field\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"polars/prelude/trait.SchemaExt.html#tymethod.get_field\" class=\"fn\">get_field</a>(&amp;self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"polars/prelude/struct.Field.html\" title=\"struct polars::prelude::Field\">Field</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Look up the name in the schema and return an owned <a href=\"polars/prelude/struct.Field.html\" title=\"struct polars::prelude::Field\"><code>Field</code></a> by cloning the data.</p>\n<p>Returns <code>None</code> if the field does not exist.</p>\n<p>This method constructs the <code>Field</code> by cloning the name and dtype. For a version that returns references, see\n[<code>get</code>][Self::get] or [<code>get_full</code>][Self::get_full].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_field\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/schema/mod.rs.html#56\">Source</a><a href=\"#method.try_get_field\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"polars/prelude/trait.SchemaExt.html#tymethod.try_get_field\" class=\"fn\">try_get_field</a>(&amp;self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"polars/prelude/struct.Field.html\" title=\"struct polars::prelude::Field\">Field</a>, <a class=\"enum\" href=\"polars/prelude/enum.PolarsError.html\" title=\"enum polars::prelude::PolarsError\">PolarsError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Look up the name in the schema and return an owned <a href=\"polars/prelude/struct.Field.html\" title=\"struct polars::prelude::Field\"><code>Field</code></a> by cloning the data.</p>\n<p>Returns <code>Err(PolarsErr)</code> if the field does not exist.</p>\n<p>This method constructs the <code>Field</code> by cloning the name and dtype. For a version that returns references, see\n[<code>get</code>][Self::get] or [<code>get_full</code>][Self::get_full].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_arrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/schema/mod.rs.html#63\">Source</a><a href=\"#method.to_arrow\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"polars/prelude/trait.SchemaExt.html#tymethod.to_arrow\" class=\"fn\">to_arrow</a>(&amp;self, compat_level: <a class=\"struct\" href=\"polars/prelude/struct.CompatLevel.html\" title=\"struct polars::prelude::CompatLevel\">CompatLevel</a>) -&gt; Schema&lt;<a class=\"struct\" href=\"polars/prelude/struct.ArrowField.html\" title=\"struct polars::prelude::ArrowField\">Field</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Convert self to <code>ArrowSchema</code> by cloning the fields.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_fields\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/schema/mod.rs.html#78\">Source</a><a href=\"#method.iter_fields\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"polars/prelude/trait.SchemaExt.html#tymethod.iter_fields\" class=\"fn\">iter_fields</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section></summary><div class=\"docblock\"><p>Iterates the <a href=\"polars/prelude/struct.Field.html\" title=\"struct polars::prelude::Field\"><code>Field</code></a>s in this schema, constructing them anew by cloning each <code>(&amp;name, &amp;dtype)</code> pair.</p>\n<p>Note that this clones each name and dtype in order to form an owned <a href=\"polars/prelude/struct.Field.html\" title=\"struct polars::prelude::Field\"><code>Field</code></a>. For a clone-free version, use\n[<code>iter</code>][Self::iter], which returns <code>(&amp;name, &amp;dtype)</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_supertype\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/schema/mod.rs.html#84\">Source</a><a href=\"#method.to_supertype\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"polars/prelude/trait.SchemaExt.html#tymethod.to_supertype\" class=\"fn\">to_supertype</a>(\n    &amp;mut self,\n    other: &amp;Schema&lt;<a class=\"enum\" href=\"polars/prelude/enum.DataType.html\" title=\"enum polars::prelude::DataType\">DataType</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"polars/prelude/enum.PolarsError.html\" title=\"enum polars::prelude::PolarsError\">PolarsError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Take another <a href=\"polars/prelude/type.Schema.html\" title=\"type polars::prelude::Schema\"><code>Schema</code></a> and try to find the supertypes between them.</p>\n</div></details><section id=\"method.from_arrow_schema\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/schema/mod.rs.html#32\">Source</a><a href=\"#method.from_arrow_schema\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"polars/prelude/trait.SchemaExt.html#tymethod.from_arrow_schema\" class=\"fn\">from_arrow_schema</a>(value: &amp;Schema&lt;<a class=\"struct\" href=\"polars/prelude/struct.ArrowField.html\" title=\"struct polars::prelude::ArrowField\">Field</a>&gt;) -&gt; Schema&lt;<a class=\"enum\" href=\"polars/prelude/enum.DataType.html\" title=\"enum polars::prelude::DataType\">DataType</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.project_select\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/schema/mod.rs.html#98\">Source</a><a href=\"#method.project_select\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"polars/prelude/trait.SchemaExt.html#tymethod.project_select\" class=\"fn\">project_select</a>(&amp;self, select: &amp;Bitmap) -&gt; Schema&lt;<a class=\"enum\" href=\"polars/prelude/enum.DataType.html\" title=\"enum polars::prelude::DataType\">DataType</a>&gt;</h4></section></summary><div class='docblock'>Select fields using a bitmap.</div></details></div></details>","SchemaExt","polars::prelude::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SchemaExtPl-for-Schema%3CDataType%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/schema.rs.html#15\">Source</a><a href=\"#impl-SchemaExtPl-for-Schema%3CDataType%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars/prelude/trait.SchemaExtPl.html\" title=\"trait polars::prelude::SchemaExtPl\">SchemaExtPl</a> for Schema&lt;<a class=\"enum\" href=\"polars/prelude/enum.DataType.html\" title=\"enum polars::prelude::DataType\">DataType</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.matches_schema\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/schema.rs.html#16\">Source</a><a href=\"#method.matches_schema\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"polars/prelude/trait.SchemaExtPl.html#tymethod.matches_schema\" class=\"fn\">matches_schema</a>(&amp;self, other: &amp;Schema&lt;<a class=\"enum\" href=\"polars/prelude/enum.DataType.html\" title=\"enum polars::prelude::DataType\">DataType</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"polars/prelude/enum.PolarsError.html\" title=\"enum polars::prelude::PolarsError\">PolarsError</a>&gt;</h4></section><section id=\"method.ensure_is_exact_match\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/schema.rs.html#25\">Source</a><a href=\"#method.ensure_is_exact_match\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"polars/prelude/trait.SchemaExtPl.html#tymethod.ensure_is_exact_match\" class=\"fn\">ensure_is_exact_match</a>(\n    &amp;self,\n    other: &amp;Schema&lt;<a class=\"enum\" href=\"polars/prelude/enum.DataType.html\" title=\"enum polars::prelude::DataType\">DataType</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"polars/prelude/enum.PolarsError.html\" title=\"enum polars::prelude::PolarsError\">PolarsError</a>&gt;</h4></section></div></details>","SchemaExtPl","polars::prelude::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SchemaNamesAndDtypes-for-Schema%3CArrowField%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/schema/mod.rs.html#117\">Source</a><a href=\"#impl-SchemaNamesAndDtypes-for-Schema%3CArrowField%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars/prelude/trait.SchemaNamesAndDtypes.html\" title=\"trait polars::prelude::SchemaNamesAndDtypes\">SchemaNamesAndDtypes</a> for Schema&lt;<a class=\"struct\" href=\"polars/prelude/struct.ArrowField.html\" title=\"struct polars::prelude::ArrowField\">Field</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.IS_ARROW\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/schema/mod.rs.html#118\">Source</a><a href=\"#associatedconstant.IS_ARROW\" class=\"anchor\">ยง</a><h4 class=\"code-header\">const <a href=\"polars/prelude/trait.SchemaNamesAndDtypes.html#associatedconstant.IS_ARROW\" class=\"constant\">IS_ARROW</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> = true</h4></section><section id=\"associatedtype.DataType\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/schema/mod.rs.html#119\">Source</a><a href=\"#associatedtype.DataType\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"polars/prelude/trait.SchemaNamesAndDtypes.html#associatedtype.DataType\" class=\"associatedtype\">DataType</a> = <a class=\"enum\" href=\"polars/prelude/enum.ArrowDataType.html\" title=\"enum polars::prelude::ArrowDataType\">ArrowDataType</a></h4></section><section id=\"method.iter_names_and_dtypes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/schema/mod.rs.html#121-123\">Source</a><a href=\"#method.iter_names_and_dtypes\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"polars/prelude/trait.SchemaNamesAndDtypes.html#tymethod.iter_names_and_dtypes\" class=\"fn\">iter_names_and_dtypes</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section></div></details>","SchemaNamesAndDtypes","polars::prelude::ArrowSchema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SchemaNamesAndDtypes-for-Schema%3CDataType%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/schema/mod.rs.html#128\">Source</a><a href=\"#impl-SchemaNamesAndDtypes-for-Schema%3CDataType%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars/prelude/trait.SchemaNamesAndDtypes.html\" title=\"trait polars::prelude::SchemaNamesAndDtypes\">SchemaNamesAndDtypes</a> for Schema&lt;<a class=\"enum\" href=\"polars/prelude/enum.DataType.html\" title=\"enum polars::prelude::DataType\">DataType</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.IS_ARROW\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/schema/mod.rs.html#129\">Source</a><a href=\"#associatedconstant.IS_ARROW\" class=\"anchor\">ยง</a><h4 class=\"code-header\">const <a href=\"polars/prelude/trait.SchemaNamesAndDtypes.html#associatedconstant.IS_ARROW\" class=\"constant\">IS_ARROW</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> = false</h4></section><section id=\"associatedtype.DataType\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/schema/mod.rs.html#130\">Source</a><a href=\"#associatedtype.DataType\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"polars/prelude/trait.SchemaNamesAndDtypes.html#associatedtype.DataType\" class=\"associatedtype\">DataType</a> = <a class=\"enum\" href=\"polars/prelude/enum.DataType.html\" title=\"enum polars::prelude::DataType\">DataType</a></h4></section><section id=\"method.iter_names_and_dtypes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/schema/mod.rs.html#132-134\">Source</a><a href=\"#method.iter_names_and_dtypes\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"polars/prelude/trait.SchemaNamesAndDtypes.html#tymethod.iter_names_and_dtypes\" class=\"fn\">iter_names_and_dtypes</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section></div></details>","SchemaNamesAndDtypes","polars::prelude::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-Serialize-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for Schema&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(\n    &amp;self,\n    __serializer: __S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","polars::prelude::ArrowSchema","polars::prelude::Schema"],["<section id=\"impl-Eq-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Schema&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","polars::prelude::ArrowSchema","polars::prelude::Schema"]]],["polars_core",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Schema&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Schema&lt;D&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#246-248\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","polars_core::prelude::ArrowSchema","polars_core::schema::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Schema&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","polars_core::prelude::ArrowSchema","polars_core::schema::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-Default-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for Schema&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Schema&lt;D&gt;</h4></section></summary><div class='docblock'>Returns the โdefault valueโ for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","polars_core::prelude::ArrowSchema","polars_core::schema::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'de, D&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for Schema&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(\n    __deserializer: __D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Schema&lt;D&gt;, &lt;__D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","polars_core::prelude::ArrowSchema","polars_core::schema::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CF%3E-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-Extend%3CF%3E-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;F, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt; for Schema&lt;D&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;(<a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>, D)&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a href=\"#method.extend\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;T&gt;(&amp;mut self, iter: T)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = F&gt;,</div></h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#417\">Source</a><a href=\"#method.extend_one\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#425\">Source</a><a href=\"#method.extend_reserve\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<F>","polars_core::prelude::ArrowSchema","polars_core::schema::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CIndexMap%3CPlSmallStr,+D,+RandomState%3E%3E-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-From%3CIndexMap%3CPlSmallStr,+D,+RandomState%3E%3E-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;IndexMap&lt;<a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>, D, RandomState&gt;&gt; for Schema&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(fields: IndexMap&lt;<a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>, D, RandomState&gt;) -&gt; Schema&lt;D&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<IndexMap<PlSmallStr, D, RandomState>>","polars_core::prelude::ArrowSchema","polars_core::schema::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CF%3E-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-FromIterator%3CF%3E-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;F, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;F&gt; for Schema&lt;D&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;(<a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>, D)&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a href=\"#method.from_iter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(iter: I) -&gt; Schema&lt;D&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = F&gt;,</div></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<F>","polars_core::prelude::ArrowSchema","polars_core::schema::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-Hash-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for Schema&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","polars_core::prelude::ArrowSchema","polars_core::schema::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-IntoIterator-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for Schema&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = &lt;IndexMap&lt;<a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>, D, RandomState&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = (<a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>, D)</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a href=\"#method.into_iter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; &lt;Schema&lt;D&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","polars_core::prelude::ArrowSchema","polars_core::schema::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Schema&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Schema&lt;D&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","polars_core::prelude::ArrowSchema","polars_core::schema::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;D&gt; Schema&lt;D&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.with_capacity\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Schema&lt;D&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Reserve <code>additional</code> memory spaces in the schema.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>The number of fields in the schema.</p>\n</div></details><section id=\"method.is_empty\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.rename\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">rename</a>(&amp;mut self, old: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, new: <a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Rename field <code>old</code> to <code>new</code>, and return the (owned) old name.</p>\n<p>If <code>old</code> is not present in the schema, the schema is not modified and <code>None</code> is returned. Otherwise the schema\nis updated and <code>Some(old_name)</code> is returned.</p>\n</div></details><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>(&amp;mut self, key: <a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>, value: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;D&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_at_index\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert_at_index</a>(\n    &amp;mut self,\n    index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    name: <a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>,\n    dtype: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;D&gt;, <a class=\"enum\" href=\"polars_core/error/enum.PolarsError.html\" title=\"enum polars_core::error::PolarsError\">PolarsError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Insert a field with <code>name</code> and <code>dtype</code> at the given <code>index</code> into this schema.</p>\n<p>If a field named <code>name</code> already exists, it is updated with the new dtype. Regardless, the field named <code>name</code> is\nalways moved to the given index. Valid indices range from <code>0</code> (front of the schema) to <code>self.len()</code> (after the\nend of the schema).</p>\n<p>For a non-mutating version that clones the schema, see [<code>new_inserting_at_index</code>][Self::new_inserting_at_index].</p>\n<p>Runtime: <strong>O(n)</strong> where <code>n</code> is the number of fields in the schema.</p>\n<p>Returns:</p>\n<ul>\n<li>If index is out of bounds, <code>Err(PolarsError)</code></li>\n<li>Else if <code>name</code> was already in the schema, <code>Ok(Some(old_dtype))</code></li>\n<li>Else <code>Ok(None)</code></li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>(&amp;self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;D</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get a reference to the dtype of the field named <code>name</code>, or <code>None</code> if the field doesnโt exist.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_mut</a>(&amp;mut self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get a mutable reference to the dtype of the field named <code>name</code>, or <code>None</code> if the field doesnโt exist.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get</a>(&amp;self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;D</a>, <a class=\"enum\" href=\"polars_core/error/enum.PolarsError.html\" title=\"enum polars_core::error::PolarsError\">PolarsError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get a reference to the dtype of the field named <code>name</code>, or <code>Err(PolarsErr)</code> if the field doesnโt exist.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get_mut</a>(&amp;mut self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>, <a class=\"enum\" href=\"polars_core/error/enum.PolarsError.html\" title=\"enum polars_core::error::PolarsError\">PolarsError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Get a mutable reference to the dtype of the field named <code>name</code>, or <code>Err(PolarsErr)</code> if the field doesnโt exist.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_full\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_full</a>(&amp;self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, &amp;<a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;D</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Return all data about the field named <code>name</code>: its index in the schema, its name, and its dtype.</p>\n<p>Returns <code>Some((index, &amp;name, &amp;dtype))</code> if the field exists, <code>None</code> if it doesnโt.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_get_full\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get_full</a>(\n    &amp;self,\n    name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, &amp;<a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;D</a>), <a class=\"enum\" href=\"polars_core/error/enum.PolarsError.html\" title=\"enum polars_core::error::PolarsError\">PolarsError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Return all data about the field named <code>name</code>: its index in the schema, its name, and its dtype.</p>\n<p>Returns <code>Ok((index, &amp;name, &amp;dtype))</code> if the field exists, <code>Err(PolarsErr)</code> if it doesnโt.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_at_index\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_at_index</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;<a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;D</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Get references to the name and dtype of the field at <code>index</code>.</p>\n<p>If <code>index</code> is inbounds, returns <code>Some((&amp;name, &amp;dtype))</code>, else <code>None</code>. See\n[<code>get_at_index_mut</code>][Self::get_at_index_mut] for a mutable version.</p>\n</div></details><section id=\"method.try_get_at_index\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_get_at_index</a>(\n    &amp;self,\n    index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;<a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;D</a>), <a class=\"enum\" href=\"polars_core/error/enum.PolarsError.html\" title=\"enum polars_core::error::PolarsError\">PolarsError</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_at_index_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_at_index_mut</a>(\n    &amp;mut self,\n    index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;mut <a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Get mutable references to the name and dtype of the field at <code>index</code>.</p>\n<p>If <code>index</code> is inbounds, returns <code>Some((&amp;mut name, &amp;mut dtype))</code>, else <code>None</code>. See\n[<code>get_at_index</code>][Self::get_at_index] for an immutable version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>(&amp;mut self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;D&gt;</h4></section></summary><div class=\"docblock\"><p>Swap-remove a field by name and, if the field existed, return its dtype.</p>\n<p>If the field does not exist, the schema is not modified and <code>None</code> is returned.</p>\n<p>This method does a <code>swap_remove</code>, which is O(1) but <strong>changes the order of the schema</strong>: the field named <code>name</code>\nis replaced by the last field, which takes its position. For a slower, but order-preserving, method, use\n[<code>shift_remove</code>][Self::shift_remove].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">shift_remove</a>(&amp;mut self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;D&gt;</h4></section></summary><div class=\"docblock\"><p>Remove a field by name, preserving order, and, if the field existed, return its dtype.</p>\n<p>If the field does not exist, the schema is not modified and <code>None</code> is returned.</p>\n<p>This method does a <code>shift_remove</code>, which preserves the order of the fields in the schema but <strong>is O(n)</strong>. For a\nfaster, but not order-preserving, method, use [<code>remove</code>][Self::remove].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_remove_index\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">shift_remove_index</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>, D)&gt;</h4></section></summary><div class=\"docblock\"><p>Remove a field by name, preserving order, and, if the field existed, return its dtype.</p>\n<p>If the field does not exist, the schema is not modified and <code>None</code> is returned.</p>\n<p>This method does a <code>shift_remove</code>, which preserves the order of the fields in the schema but <strong>is O(n)</strong>. For a\nfaster, but not order-preserving, method, use [<code>remove</code>][Self::remove].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains</a>(&amp;self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Whether the schema contains a field named <code>name</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_dtype\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_dtype</a>(&amp;mut self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>, dtype: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;D&gt;</h4></section></summary><div class=\"docblock\"><p>Change the field named <code>name</code> to the given <code>dtype</code> and return the previous dtype.</p>\n<p>If <code>name</code> doesnโt already exist in the schema, the schema is not modified and <code>None</code> is returned. Otherwise\nreturns <code>Some(old_dtype)</code>.</p>\n<p>This method only ever modifies an existing field and never adds a new field to the schema. To add a new field,\nuse [<code>with_column</code>][Self::with_column] or [<code>insert_at_index</code>][Self::insert_at_index].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_dtype_at_index\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_dtype_at_index</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, dtype: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;D&gt;</h4></section></summary><div class=\"docblock\"><p>Change the field at the given index to the given <code>dtype</code> and return the previous dtype.</p>\n<p>If the index is out of bounds, the schema is not modified and <code>None</code> is returned. Otherwise returns\n<code>Some(old_dtype)</code>.</p>\n<p>This method only ever modifies an existing index and never adds a new field to the schema. To add a new field,\nuse [<code>with_column</code>][Self::with_column] or [<code>insert_at_index</code>][Self::insert_at_index].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_column\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">with_column</a>(&amp;mut self, name: <a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>, dtype: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;D&gt;</h4></section></summary><div class=\"docblock\"><p>Insert a column into the [<code>Schema</code>].</p>\n<p>If the schema already has this column, this instead updates it with the new value and\nreturns the old one. Otherwise, the column is inserted at the end.</p>\n<p>To enforce the index of the resulting field, use [<code>insert_at_index</code>][Self::insert_at_index].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_insert</a>(\n    &amp;mut self,\n    name: <a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>,\n    value: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"polars_core/error/enum.PolarsError.html\" title=\"enum polars_core::error::PolarsError\">PolarsError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Raises DuplicateError if this column already exists in the schema.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hstack_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hstack_mut</a>(\n    &amp;mut self,\n    columns: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;(<a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>, D)&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"polars_core/error/enum.PolarsError.html\" title=\"enum polars_core::error::PolarsError\">PolarsError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Performs [<code>Schema::try_insert</code>] for every column.</p>\n<p>Raises DuplicateError if a column already exists in the schema.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hstack\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">hstack</a>(\n    self,\n    columns: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;(<a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>, D)&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Schema&lt;D&gt;, <a class=\"enum\" href=\"polars_core/error/enum.PolarsError.html\" title=\"enum polars_core::error::PolarsError\">PolarsError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Performs [<code>Schema::try_insert</code>] for every column.</p>\n<p>Raises DuplicateError if a column already exists in the schema.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.merge\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">merge</a>(&amp;mut self, other: Schema&lt;D&gt;)</h4></section></summary><div class=\"docblock\"><p>Merge <code>other</code> into <code>self</code>.</p>\n<p>Merging logic:</p>\n<ul>\n<li>Fields that occur in <code>self</code> but not <code>other</code> are unmodified</li>\n<li>Fields that occur in <code>other</code> but not <code>self</code> are appended, in order, to the end of <code>self</code></li>\n<li>Fields that occur in both <code>self</code> and <code>other</code> are updated with the dtype from <code>other</code>, but keep their original\nindex</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section></summary><div class=\"docblock\"><p>Iterates over the <code>(&amp;name, &amp;dtype)</code> pairs in this schema.</p>\n<p>For an owned version, use [<code>iter_fields</code>][Self::iter_fields], which clones the data to iterate owned <code>Field</code>s</p>\n</div></details><section id=\"method.iter_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_mut</a>(&amp;mut self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_names\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_names</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section></summary><div class=\"docblock\"><p>Iterates over references to the names in this schema.</p>\n</div></details><section id=\"method.iter_names_cloned\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_names_cloned</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section></summary><div class=\"docblock\"><p>Iterates over references to the dtypes in this schema.</p>\n</div></details><section id=\"method.into_iter_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">into_iter_values</a>(self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_values_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter_values_mut</a>(&amp;mut self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/exact_size/trait.ExactSizeIterator.html\" title=\"trait core::iter::traits::exact_size::ExactSizeIterator\">ExactSizeIterator</a></h4></section></summary><div class=\"docblock\"><p>Iterates over mut references to the dtypes in this schema.</p>\n</div></details><section id=\"method.index_of\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">index_of</a>(&amp;self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section><section id=\"method.try_index_of\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_index_of</a>(&amp;self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"polars_core/error/enum.PolarsError.html\" title=\"enum polars_core::error::PolarsError\">PolarsError</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.field_compare\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">field_compare</a>&lt;'a, 'b&gt;(\n    &amp;'a self,\n    other: &amp;'b Schema&lt;D&gt;,\n    self_extra: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, (&amp;'a <a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a D</a>))&gt;,\n    other_extra: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, (&amp;'b <a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'b D</a>))&gt;,\n)</h4></section></summary><div class=\"docblock\"><p>Compare the fields between two schema returning the additional columns that each schema has.</p>\n</div></details></div></details>",0,"polars_core::prelude::ArrowSchema","polars_core::schema::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;D&gt; Schema&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_inserting_at_index\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_inserting_at_index</a>(\n    &amp;self,\n    index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    name: <a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>,\n    field: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Schema&lt;D&gt;, <a class=\"enum\" href=\"polars_core/error/enum.PolarsError.html\" title=\"enum polars_core::error::PolarsError\">PolarsError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new schema from this one, inserting a field with <code>name</code> and <code>dtype</code> at the given <code>index</code>.</p>\n<p>If a field named <code>name</code> already exists, it is updated with the new dtype. Regardless, the field named <code>name</code> is\nalways moved to the given index. Valid indices range from <code>0</code> (front of the schema) to <code>self.len()</code> (after the\nend of the schema).</p>\n<p>For a mutating version that doesnโt clone, see [<code>insert_at_index</code>][Self::insert_at_index].</p>\n<p>Runtime: <strong>O(m * n)</strong> where <code>m</code> is the (average) length of the field names and <code>n</code> is the number of fields in\nthe schema. This method clones every field in the schema.</p>\n<p>Returns: <code>Ok(new_schema)</code> if <code>index &lt;= self.len()</code>, else <code>Err(PolarsError)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.merge_from_ref\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">merge_from_ref</a>(&amp;mut self, other: &amp;Schema&lt;D&gt;)</h4></section></summary><div class=\"docblock\"><p>Merge borrowed <code>other</code> into <code>self</code>.</p>\n<p>Merging logic:</p>\n<ul>\n<li>Fields that occur in <code>self</code> but not <code>other</code> are unmodified</li>\n<li>Fields that occur in <code>other</code> but not <code>self</code> are appended, in order, to the end of <code>self</code></li>\n<li>Fields that occur in both <code>self</code> and <code>other</code> are updated with the dtype from <code>other</code>, but keep their original\nindex</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_project\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_project</a>&lt;I&gt;(&amp;self, columns: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Schema&lt;D&gt;, <a class=\"enum\" href=\"polars_core/error/enum.PolarsError.html\" title=\"enum polars_core::error::PolarsError\">PolarsError</a>&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Generates another schema with just the specified columns selected from this one.</p>\n</div></details><section id=\"method.try_project_indices\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_project_indices</a>(\n    &amp;self,\n    indices: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Schema&lt;D&gt;, <a class=\"enum\" href=\"polars_core/error/enum.PolarsError.html\" title=\"enum polars_core::error::PolarsError\">PolarsError</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">filter</a>&lt;F&gt;(self, predicate: F) -&gt; Schema&lt;D&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;D</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns a new [<code>Schema</code>] with a subset of all fields whose <code>predicate</code>\nevaluates to true.</p>\n</div></details><section id=\"method.from_iter_check_duplicates\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_iter_check_duplicates</a>&lt;I, F&gt;(\n    iter: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Schema&lt;D&gt;, <a class=\"enum\" href=\"polars_core/error/enum.PolarsError.html\" title=\"enum polars_core::error::PolarsError\">PolarsError</a>&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = F&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;(<a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>, D)&gt;,</div></h4></section><section id=\"method.try_from_iter_check_duplicates\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_from_iter_check_duplicates</a>&lt;I, F, E&gt;(\n    iter: I,\n    err_func: E,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Schema&lt;D&gt;, <a class=\"enum\" href=\"polars_core/error/enum.PolarsError.html\" title=\"enum polars_core::error::PolarsError\">PolarsError</a>&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;F, <a class=\"enum\" href=\"polars_core/error/enum.PolarsError.html\" title=\"enum polars_core::error::PolarsError\">PolarsError</a>&gt;&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;(<a class=\"struct\" href=\"polars_core/datatypes/struct.PlSmallStr.html\" title=\"struct polars_core::datatypes::PlSmallStr\">PlSmallStr</a>, D)&gt;,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"polars_core/error/enum.PolarsError.html\" title=\"enum polars_core::error::PolarsError\">PolarsError</a>,</div></h4></section></div></details>",0,"polars_core::prelude::ArrowSchema","polars_core::schema::Schema"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-Serialize-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for Schema&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(\n    &amp;self,\n    __serializer: __S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","polars_core::prelude::ArrowSchema","polars_core::schema::Schema"],["<section id=\"impl-Eq-for-Schema%3CD%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Schema%3CD%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Schema&lt;D&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","polars_core::prelude::ArrowSchema","polars_core::schema::Schema"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[80697,64444]}
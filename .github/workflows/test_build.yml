name: Release Python

on:
  pull_request:
  workflow_dispatch:
    inputs:
      # Latest commit to include with the release. If omitted, use the latest commit on the main branch.
      sha:
        description: Commit SHA
        type: string
      # Create the sdist and build the wheels, but do not publish to PyPI / GitHub.
      dry-run:
        description: Dry run
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: '3.9'
  PYTHON_VERSION_WIN_ARM64: '3.11' # ARM64 Windows doesn't have older versions
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

jobs:
  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        package: [polars]
        os: [macos-13]
        architecture: [aarch64]
        exclude:
          - os: windows-latest
            architecture: aarch64
          - os: windows-arm64-16gb
            architecture: x86-64

    env:
      SED_INPLACE: ${{ matrix.os == 'macos-13' && '-i ''''' || '-i'}}
      CPU_CHECK_MODULE: py-polars/polars/_cpu_check.py

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha }}

      # Avoid potential out-of-memory errors

      - name: Install yq
        if: matrix.package != 'polars'
        run: pip install yq

      - name: Update optional dependencies
        if: matrix.package != 'polars'
        run: sed $SED_INPLACE 's/polars\[/${{ matrix.package }}\[/' py-polars/pyproject.toml

      - name: Set variables in CPU check module
        run: |
          sed $SED_INPLACE 's/^_POLARS_ARCH = \"unknown\"$/_POLARS_ARCH = \"${{ matrix.architecture }}\"/g' $CPU_CHECK_MODULE
          sed $SED_INPLACE 's/^_POLARS_FEATURE_FLAGS = \"\"$/_POLARS_FEATURE_FLAGS = \"${{ steps.features.outputs.features }}\"/g' $CPU_CHECK_MODULE

      - name: Set Rust target for aarch64
        if: matrix.architecture == 'aarch64'
        id: target
        run: |
          TARGET=$(
            if [[ "${{ matrix.os }}" == "macos-13" ]]; then
              echo "aarch64-apple-darwin";
            elif [[ "${{ matrix.os }}" == "windows-arm64-16gb" ]]; then
              echo "aarch64-pc-windows-msvc";
            else
              echo "aarch64-unknown-linux-gnu";
            fi
          )
          echo "target=$TARGET" >> $GITHUB_OUTPUT

      - name: Build wheel
        uses: PyO3/maturin-action@v1
        with:
          command: build
          target: ${{ steps.target.outputs.target }}
          args: >
            --profile dist-release
            --manifest-path py-polars/Cargo.toml
            --out dist
          manylinux: ${{ matrix.architecture == 'aarch64' && '2_24' || 'auto' }}
          maturin-version: 1.8.3

      - name: Test wheel
        # Only test on x86-64 for now as this matches the runner architecture
        # if: matrix.architecture == 'x86-64'
        run: |
          pip install --force-reinstall --verbose dist/*.whl
          python -c 'import polars'


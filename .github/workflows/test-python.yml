name: Test Python

on:
  # push:
  #   branches:
  #     - main
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    working-directory: py-polars

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.11']

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'py-polars/requirements-dev.txt'

      - name: Create virtual environment
        run: |
          python -m venv .venv
          echo "$GITHUB_WORKSPACE/py-polars/.venv/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Set up Rust
        run: rustup show

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: shared
          workspaces: py-polars
          save-if: false

      - name: Install Polars
        env:
          RUSTFLAGS: -C debuginfo=0  # Do not produce debug symbols to keep memory usage down
        run: |
          source activate
          maturin develop

      - name: Run tests and report coverage
        run: pytest --cov -n auto --dist worksteal -m "not benchmark"

      - name: Run doctests
        run: python tests/docs/run_doctest.py

      - name: Check import without optional dependencies
        run: |
          declare -a deps=("pandas"
          "pyarrow"
          "fsspec"
          "matplotlib"
          "backports.zoneinfo"
          "connectorx"
          "deltalake"
          "xlsx2csv"
          )
          for d in "${deps[@]}"
          do
            echo "uninstall $i and check imports..."
            pip uninstall "$d" -y
            python -c 'import polars'
          done

  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.11']

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: py-polars/requirements-dev.txt

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Set up Rust
        run: rustup show

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: shared
          workspaces: py-polars
          save-if: false

      - name: Install Polars
        shell: bash
        env:
          RUSTFLAGS: -C debuginfo=0  # Do not produce debug symbols to keep memory usage down
        run: |
          maturin build
          pip install target/wheels/polars-*.whl

      - name: Run tests
        run: pytest -m "not benchmark"

      - name: Check import without optional dependencies
        run: |
          pip uninstall pandas -y
          python -c 'import polars'
          pip uninstall numpy -y
          python -c 'import polars'
          pip uninstall pyarrow -y
          python -c 'import polars'

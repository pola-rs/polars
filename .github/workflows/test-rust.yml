name: Test Rust

on:
  pull_request:
    paths:
      - crates/**
      - examples/**
      - Cargo.toml
      - .github/workflows/test-rust.yml
  push:
    branches:
      - main
    paths:
      - crates/**
      - examples/**
      - Cargo.toml
      - .github/workflows/test-rust.yml

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  RUSTFLAGS: -C debuginfo=0  # Do not produce debug symbols to keep memory usage down

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        run: rustup show

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref_name == 'main' }}

      - name: Compile tests
        run: >
          cargo test --all-features --no-run
          -p polars-lazy
          -p polars-io
          -p polars-core
          -p polars-arrow
          -p polars-time
          -p polars-utils
          -p polars-row
          -p polars-sql

      - name: Run tests
        if: github.ref_name != 'main'
        run: >
          cargo test --all-features
          -p polars-lazy
          -p polars-io
          -p polars-core
          -p polars-arrow
          -p polars-time
          -p polars-utils
          -p polars-row
          -p polars-sql

  integration-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        run: rustup show

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref_name == 'main' }}

      - name: Compile integration tests
        run: cargo test --all-features -p polars --test it --no-run

      - name: Run integration tests
        if: github.ref_name != 'main'
        run: cargo test --all-features -p polars --test it

  check-features:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        run: rustup show

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref_name == 'main' }}

      - name: Install cargo hack
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-hack

      - name: Run cargo hack
        run: cargo hack check -p polars --each-feature --no-dev-deps

  build-other-targets:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
        - name: Wasm
          target: wasm32-unknown-unknown
          features: >
            -F abs
            -F algo
            -F approx_unique
            -F arg_where
            -F asof_join
            -F avro
            -F avx512
            -F bigidx
            -F binary_encoding
            -F checked_arithmetic
            -F chunked_ids
            -F coalesce
            -F concat_str
            -F cse
            -F cum_agg
            -F cumulative_eval
            -F dataframe_arithmetic
            -F date_offset
            -F decompress
            -F describe
            -F diagonal_concat
            -F diff
            -F docs
            -F dot_diagram
            -F dot_product
            -F dtype-date
            -F dtype-datetime
            -F dtype-duration
            -F dtype-slim
            -F dtype-struct
            -F dtype-time
            -F dynamic_groupby
            -F ewma
            -F fmt_no_tty
            -F fused
            -F groupby_list
            -F horizontal_concat
            -F interpolate
            -F is_first
            -F is_in
            -F is_last
            -F is_unique
            -F lazy
            -F lazy_regex
            -F list_count
            -F list_eval
            -F list_take
            -F list_to_struct
            -F log
            -F merge_sorted
            -F meta
            -F mode
            -F moment
            -F ndarray
            -F object
            -F partition_by
            -F pct_change
            -F pivot
            -F product
            -F propagate_nans
            -F random
            -F range
            -F rank
            -F reinterpret
            -F repeat_by
            -F rolling_window
            -F round_series
            -F row_hash
            -F rows
            -F search_sorted
            -F semi_anti_join
            -F serde
            -F serde-lazy
            -F sign
            -F simd
            -F sort_multiple
            -F string_encoding
            -F string_from_radix
            -F string_justify
            -F strings
            -F take_opt_iter
            -F temporal
            -F timezones
            -F to_dummies
            -F top_k
            -F trigonometry
            -F true_div
            -F unique_counts
            -F zip_with

    steps:
      - uses: actions/checkout@v3
      - name: Set up Rust
        run: |
          rustup target add ${{ matrix.target }}
          rustup show
      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref_name == 'main' }}
      - name: Compile everything
        run: cargo build --target ${{ matrix.target }} -p polars --no-default-features ${{ matrix.features }}


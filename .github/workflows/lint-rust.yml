name: Lint Rust

on:
  pull_request:
    paths:
      - crates/**
      - examples/**
      - Cargo.toml
      - .github/workflows/lint-rust.yml
  push:
    branches:
      - main
    paths:
      - crates/**
      - examples/**
      - Cargo.toml
      - .github/workflows/lint-rust.yml

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  RUSTFLAGS: -C debuginfo=0  # Do not produce debug symbols to keep memory usage down

jobs:
  clippy-nightly:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        run: rustup component add clippy

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref_name == 'main' }}

      - name: Run cargo clippy with all features enabled
        run: cargo clippy -p polars --all-features -- -D warnings

  # Default feature set should compile on the stable toolchain
  clippy-stable:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        run: rustup override set stable && rustup update

      - name: Install clippy
        run: rustup component add clippy

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref_name == 'main' }}

      - name: Run cargo clippy
        run: cargo clippy -p polars -- -D warnings

  rustfmt:
    if: github.ref_name != 'main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        run: rustup component add rustfmt

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

  miri:
    if: github.ref_name != 'main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        run: rustup component add miri

      - name: Set up miri
        run: cargo miri setup

      - name: Run miri
        env:
          MIRIFLAGS: -Zmiri-disable-isolation -Zmiri-ignore-leaks -Zmiri-disable-stacked-borrows
          POLARS_ALLOW_EXTENSION: '1'
        run: >
          cargo miri test
          --features object
          -p polars-core
#          -p polars-arrow

name: JS Build and Test

on:
  - pull_request
jobs:
  build:
    defaults:
      run:
        working-directory: nodejs-polars
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: "x86_64-apple-darwin"
            build: npm run build
          # - host: windows-latest
          #   target: "x86_64-pc-windows-msvc"
          #   build: npm run build
          # - host: windows-latest
          #   target: "i686-pc-windows-msvc"
          #   setup: |
          #     choco install nodejs-lts --x86 -y --force
          #     echo "C:\\Program Files (x86)\\nodejs" >> $GITHUB_PATH
          #   build: |
          #     export CARGO_PROFILE_RELEASE_CODEGEN_UNITS=32;
          #     export CARGO_PROFILE_RELEASE_LTO=false
          #     npm run build -- --target i686-pc-windows-msvc
          - host: ubuntu-latest
            target: "x86_64-unknown-linux-gnu"
            build: npm run build
    name: nodejs-polars-${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Install latest Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-12-02
          override: true
          target: ${{ matrix.settings.target }}

      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ matrix.settings.target }}-node@16-cargo-registry-trimmed-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ matrix.settings.target }}-node@16-cargo-index-trimmed-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache NPM dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: npm-cache-${{ matrix.settings.target }}-node@16-${{ hashFiles('yarn.lock') }}

      - name: "Setup toolchain"
        if: ${{ matrix.settings.setup }}
        run: ${{ matrix.settings.setup }}

      - name: "Install dependencies"
        run: npm install
  
      - name: "Build"
        run: ${{ matrix.settings.build }}
        shell: bash

      - name: "Debug Out"
        run: ls
        
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: bindings-${{ matrix.settings.target }}
          path: artifacts/*.node

  publish:
    defaults:
      run:
        working-directory: nodejs-polars
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14
          check-latest: true

      - name: Cache NPM dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: npm-cache-ubuntu-latest-publish-${{ hashFiles('yarn.lock') }}

      - name: 'Install dependencies'
        run: npm install

      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: List artifacts
        run: ls -R artifacts
        shell: bash

      - name: Move artifacts
        run: npm run artifacts

      - name: Build TypeScript
        run: npm run build:ts

      - name: List packages
        run: ls -R packages
        shell: bash
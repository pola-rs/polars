name: Create Python release

on:
  push:
     # Sequence of patterns matched against refs/tags
    tags:
      - 'py-polars-v*' # Push events to matching py-polars-v*, i.e. py-polars-v1.0, py-polars-v20.15.10
jobs:
  test:
    name: Test Python bindings
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: [ "3.6", "3.7" ]
    steps:
      - uses: actions/checkout@v2
      - name: Install latest Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-10-21
          override: true
          components: rustfmt, clippy
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install maturin==0.12.1 pytest pandas pyarrow
      - name: Run tests
        run: |
          cd py-polars
          rustup override set nightly-2021-10-21
          make build-and-test
          rm wheels/*

  build:
    needs: build_manylinux
    name: Create Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["macos-latest", "windows-latest"]
        python-version: ["3.6"]
    steps:
        - uses: actions/checkout@v2
        - name: Install latest Rust nightly
          uses: actions-rs/toolchain@v1
          with:
            toolchain: nightly-2021-10-21
            override: true
            components: rustfmt, clippy
        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: ${{ matrix.python-version }}
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install maturin==0.12.1
        - name: Publish wheel
          shell: bash
          env:
            MATURIN_PASSWORD: ${{ secrets.PYPI_PASS }}
          run: |
            rm py-polars/README.md
            cp README.md py-polars/README.md
            cd py-polars
            rustup override set nightly-2021-10-21
            export RUSTFLAGS='-C target-feature=+fxsr,+sse,+sse2,+sse3'
            maturin publish \
            --no-sdist \
            --skip-existing \
            -o wheels \
            -i python \
            --username ritchie46 \

  build_manylinux:
    needs: test
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Publish wheel
        uses: docker://konstin2/maturin:latest
        env:
          MATURIN_PASSWORD: ${{ secrets.PYPI_PASS }}
        with:
          entrypoint: /bin/bash
          args: .github/deploy_manylinux.sh

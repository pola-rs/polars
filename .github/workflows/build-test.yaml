name: Build and test

on:
  - pull_request
jobs:
  test-rust:
    name: Build and test Rust
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-10-21
          override: true
          components: rustfmt, clippy, miri
      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          # these represent dependencies downloaded by cargo
          # and thus do not depend on the OS, arch nor rust version.
          path: /github/home/.cargo
          key: cargo-cache-
      - name: Cache Rust dependencies
        uses: actions/cache@v2
        with:
          # these represent compiled steps of both dependencies and arrow
          # and thus are specific for a particular OS, arch and rust version.
          path: /github/home/target
          key: ubuntu-x86-64-target-cache-nightly
      - name: Install dependencies
        run: |
          cargo install cargo-hack
          curl -fsSLO https://github.com/dprint/dprint/releases/download/0.18.2/dprint-x86_64-unknown-linux-gnu.zip
          unzip -o dprint-x86_64-unknown-linux-gnu.zip dprint -d ~/.cargo/bin/
          rm -f dprint-x86_64-unknown-linux-gnu.zip
      - name: Run formatting checks
        run: |
          cargo fmt --all -- --check
          dprint check
      - name: Run linting checks
        run : |
          # do not produce debug symbols to keep memory usage down
          export RUSTFLAGS="-C debuginfo=0"
          cd polars && cargo clippy -Z unstable-options --all-features \
          -p polars-core \
          -p polars-io \
          -p polars-lazy \
          -- -D warnings
          cargo clippy -Z unstable-options -- -D warnings
      - name: Feature test
        run: |
          cd polars && cargo hack check --each-feature --no-dev-deps --features private
      - name: Run tests
        run: |
          export RUSTFLAGS="-C debuginfo=0"
          cd polars && make test
      - name: Run miri
        run: |
          cd polars
          cargo miri setup
          cargo clean
          make miri

  test-python:
    name: Build and test Python
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.6", "3.10" ]
    steps:
      - uses: actions/checkout@v2
      - name: Install latest Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-10-21
          override: true
          components: rustfmt, clippy
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r py-polars/build.requirements.txt
      - name: Run formatting checks
        run: |
          cd py-polars && black --check . && blackdoc --check . && isort --check . && rustup override set nightly-2021-10-21 && cargo fmt --all -- --check && cd ..
      - name: Run linting
        run: |
          cd py-polars && flake8 && cd ..
      - name: Run type checking
        run: |
          cd py-polars && mypy && cd ..
      - name: Run tests
        run: |
          export RUSTFLAGS="-C debuginfo=0"
          cd py-polars && rustup override set nightly-2021-10-21 && make build-and-test-with-cov
          cargo clippy
      # test if we can import polars without any requirements
      - name: Import polars
        run: |
          pip uninstall pandas -y
          python -c "import polars"

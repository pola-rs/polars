name: Build and test rust

on:
  pull_request:
    paths:
      - 'polars/**'
jobs:

  examples:
    name: Examples
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update stable
      - uses: Swatinem/rust-cache@v1
      - name: "check"
        run: cd examples && cargo check

  features:
    name: Features
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-04-01
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: Install dependencies
        run: |
          cargo install cargo-hack
      - name: Feature test
        run: |
          cd polars && cargo hack check --each-feature --no-dev-deps --features private

  test-rust:
    name: Build and test Rust
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install latest Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-04-01
          override: true
          components: rustfmt, clippy, miri
      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          # these represent dependencies downloaded by cargo
          # and thus do not depend on the OS, arch nor rust version.
          path: /github/home/.cargo
          key: cargo-cache-
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          # these represent compiled steps of both dependencies and arrow
          # and thus are specific for a particular OS, arch and rust version.
          path: /github/home/target
          key: ubuntu-x86-64-target-cache-nightly
      - name: Install dependencies
        run: |
          rm -f dprint-x86_64-unknown-linux-gnu.zip
      - name: Run formatting checks
        run: |
          cargo fmt --all -- --check
      - name: Run linting checks
        run : |
          # do not produce debug symbols to keep memory usage down
          export RUSTFLAGS="-C debuginfo=0"
          cd polars && cargo clippy --all-features \
          -p polars-core \
          -p polars-io \
          -p polars-lazy \
          -- -D warnings
          cargo clippy -- -D warnings
      - name: Run tests
        run: |
          export RUSTFLAGS="-C debuginfo=0"
          cd polars && make test && make integration-tests
      - name: Run miri
        run: |
          cd polars
          cargo miri setup
          cargo clean
          make miri

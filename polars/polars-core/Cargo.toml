[package]
name = "polars-core"
version = "0.18.0"
authors = ["ritchie46 <ritchie46@gmail.com>"]
edition = "2018"
license = "MIT"
repository = "https://github.com/pola-rs/polars"
description = "Core of the Polars DataFrame library"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
simd = ["arrow/simd"]
avx512 = []
docs = []
temporal = ["chrono", "regex"]
random = ["rand", "rand_distr"]
default = ["docs", "temporal", "performant", "private"]
lazy = ["sort_multiple"]

# commented out until UB is fixed
# parallel = []

# ~40% faster collect, needed until trustedlength iter stabilizes
performant = []

# extra utilities for Utf8Chunked
strings = ["regex", "polars-arrow/strings", "arrow/compute_substring"]

# support for ObjectChunked<T> (downcastable Series of any type)
object = ["serde_json"]

# Cannot have mutually exclusive types. User should choose one of:
pretty_fmt = ["comfy-table"]
plain_fmt = ["prettytable-rs"]

# opt-in features
# pivot operation on DataFrame
pivot = []
# resample operation on DataFrame
downsample = ["temporal", "dtype-datetime"]
# sort by multiple columns
sort_multiple = []
# create from row values
rows = []
# dont use this
private = []

# operations
is_in = []
zip_with = []
round_series = []
checked_arithmetic = []
repeat_by = []
is_first = []
is_last = []
asof_join = []
cross_join = []
dot_product = []
concat_str = []
row_hash = []
reinterpret = []
take_opt_iter = []
mode = []
extract_jsonpath = ["serde_json", "jsonpath_lib"]
# allow groupby operation on list type
groupby_list = []
# cumsum, cummin, etc.
cum_agg = []
# rolling window functions
rolling_window = []
interpolate = []
# additional list utils
list = []
rank = []
diff = []
moment = []
diagonal_concat = []
abs = []

# opt-in datatypes for Series
dtype-date = ["temporal"]
dtype-datetime = ["temporal"]
dtype-time = ["temporal"]
dtype-i8 = []
dtype-i16 = []
dtype-u8 = []
dtype-u16 = []
dtype-categorical = []

parquet = ["arrow/io_parquet"]

docs-selection = [
  "ndarray",
  "pivot",
  "downsample",
  "is_in",
  "sort_multiple",
  "rows",
  "docs",
  "strings",
  "object",
  "lazy",
  "temporal",
  "random",
  "zip_with",
  "round_series",
  "checked_arithmetic",
  "repeat_by",
  "is_first",
  "is_last",
  "asof_join",
  "cross_join",
  "dot_product",
  "concat_str",
  "row_hash",
  "mode",
  "extract_jsonpath",
  "cum_agg",
  "rolling_window",
  "interpolate",
  "diff",
  "moment",
  "dtype-categorical",
  "rank",
  "list",
  "diagonal_concat",
  "abs",
]

[dependencies]
ahash = "0.7"
anyhow = "1.0"
# arrow = { package = "arrow2", git = "https://github.com/jorgecarleitao/arrow2", rev = "e9a6c3ef7e1a328c298bd45e36ac2abf8ae44ebb", default-features = false, features = ["compute"] }
# arrow = { package = "arrow2", git = "https://github.com/ritchie46/arrow2", default-features = false, features = ["compute"], branch = "fn_to" }
# arrow = { package = "arrow2", version = "0.8", default-features = false, features = ["compute"] }

chrono = { version = "0.4", optional = true }
comfy-table = { version = "4.0", optional = true }
hashbrown = { version = "0.11", features = ["rayon"] }
itertools = "0.10"
jsonpath_lib = { version = "0.3.0", optional = true, git = "https://github.com/ritchie46/jsonpath", branch = "improve_compiled" }
lazy_static = "1.4"
ndarray = { version = "0.15", optional = true, default_features = false }
num = "^0.4"
num_cpus = "1.1"
polars-arrow = { version = "0.18.0", path = "../polars-arrow", features = ["compute"] }
prettytable-rs = { version = "0.8.0", optional = true }
rand = { version = "0.8", optional = true }
rand_distr = { version = "0.4", optional = true }
rayon = "1.5"
regex = { version = "1.4", optional = true }
# activate if you want serde support for Series and DataFrames
serde = { version = "1", features = ["derive"], optional = true }
serde_json = { version = "1.0", optional = true }
thiserror = "1.0"
unsafe_unwrap = "^0.1.0"

[dependencies.arrow]
package = "arrow2"
version = "0.8"
default-features = false
features = [
  "compute_aggregate",
  "compute_arithmetics",
  "compute_boolean",
  "compute_boolean_kleene",
  "compute_cast",
  "compute_comparison",
  "compute_concatenate",
  "compute_filter",
  "compute_if_then_else",
  "compute_take",
]

[package.metadata.docs.rs]
# not all because arrow 4.3 does not compile with simd
# all-features = true
features = ["docs-selection"]
# defines the configuration attribute `docsrs`
rustdoc-args = ["--cfg", "docsrs"]

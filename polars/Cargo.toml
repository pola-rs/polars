[package]
name = "polars"
version = "0.12.0"
authors = ["ritchie46 <ritchie46@gmail.com>"]
edition = "2018"
license = "MIT"
description = "DataFrame library"
repository = "https://github.com/ritchie46/polars"
readme = "../README.md"

[features]
simd = ["polars-core/simd"]
docs = ["polars-core/docs"]
temporal = ["polars-core/temporal", "polars-lazy/temporal"]
random = ["polars-core/random"]
default = ["docs",
    "temporal",
    "performant",
    "plain_fmt",
    "mimalloc"
]
ndarray = ["polars-core/ndarray"]
parquet = ["polars-core/parquet", "polars-lazy/parquet", "polars-io/parquet"]
lazy = ["polars-core/lazy"]
# commented out until UB is fixed
#parallel = ["polars-core/parallel"]
# extra utilities for Utf8Chunked
strings = ["polars-core/strings"]
# support for ObjectChunked<T> (downcastable Series of any type)
object = ["polars-core/object"]
# support for arrows json parsing
json = ["polars-io/json"]
# support for arrows ipc file parsing
ipc = ["polars-io/ipc"]
# ~40% faster chunkedarray creation, but may lead to unexpected panic if iterator incorrectly sets a size_hint
# that fits a TrustedLen iterator.
performant = ["polars-core/performant"]
plain_fmt = ["polars-core/plain_fmt"]
pretty_fmt = ["polars-core/pretty_fmt"]

# opt-in datatypes
dtype-full = [
    "dtype-time64-ns",
    "dtype-duration-ns",
    "dtype-duration-ms",
    "dtype-date32",
    "dtype-date64",
    "dtype-i8",
    "dtype-i16",
    "dtype-u8",
    "dtype-u16",
    "dtype-u64",
]

# sensible minimal set of opt-in datatypes
dtype-slim = [
    "dtype-date32",
    "dtype-date64",
]

dtype-time64-ns = ["polars-core/dtype-time64-ns"]
dtype-duration-ns = ["polars-core/dtype-duration-ns"]
dtype-duration-ms = ["polars-core/dtype-duration-ms"]
dtype-date32 = ["polars-core/dtype-date32", "polars-lazy/dtype-date32"]
dtype-date64 = ["polars-core/dtype-date64", "polars-lazy/dtype-date64"]
dtype-i8 = ["polars-core/dtype-i8", "polars-lazy/dtype-i8"]
dtype-i16 = ["polars-core/dtype-i16", "polars-lazy/dtype-i16"]
dtype-u8 = ["polars-core/dtype-u8", "polars-lazy/dtype-u8"]
dtype-u16 = ["polars-core/dtype-u16", "polars-lazy/dtype-u16"]
dtype-u64 = ["polars-core/dtype-u64", "polars-lazy/dtype-u64", "polars-io/dtype-u64"]

[dependencies]
polars-core = {version = "0.12.0", path = "./polars-core", features= ["docs"], default-features = false}
polars-io = {version = "0.12.0", path = "./polars-io", default-features = false}
polars-lazy = {version = "0.12.0", path = "./polars-lazy", default-features = false}
mimalloc = { version = "*", default-features = false, optional = true}

[dev-dependencies]
criterion = "0.3"
lazy_static = "1.4"
rand = "0.8"
ahash = "0.7"

# see: https://bheisler.github.io/criterion.rs/book/faq.html
[lib]
bench = false

[[bench]]
name = "csv"
harness = false

[[bench]]
name = "groupby"
harness = false

[[bench]]
name = "collect"
harness = false

[[bench]]
name = "take"
harness = false

[package.metadata.docs.rs]
all-features = true
# defines the configuration attribute `docsrs`
rustdoc-args = ["--cfg", "docsrs"]
